
Linetracer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00001152  000011e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001152  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005a  00800120  00800120  00001206  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001206  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001238  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b38  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000871  00000000  00000000  00001dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000074c  00000000  00000000  0000266d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  00002dbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000477  00000000  00000000  00002ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000250  00000000  00000000  0000336f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000035bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__vector_1>
       6:	00 00       	nop
       8:	6e c0       	rjmp	.+220    	; 0xe6 <__vector_2>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	ec c0       	rjmp	.+472    	; 0x21a <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e5       	ldi	r30, 0x52	; 82
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 32       	cpi	r26, 0x20	; 32
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a0 e2       	ldi	r26, 0x20	; 32
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	aa 37       	cpi	r26, 0x7A	; 122
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	34 d0       	rcall	.+104    	; 0x12c <main>
      c4:	0c 94 a7 08 	jmp	0x114e	; 0x114e <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <__vector_1>:
volatile int line_count=0;
volatile int line_dis=0;
volatile int mod=0;
volatile int stop=0;
ISR(INT0_vect)
{
      ca:	1f 92       	push	r1
      cc:	0f 92       	push	r0
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	0f 92       	push	r0
      d2:	11 24       	eor	r1, r1
	g_mod=0;
      d4:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <g_mod+0x1>
      d8:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <g_mod>
	 
}
      dc:	0f 90       	pop	r0
      de:	0f be       	out	0x3f, r0	; 63
      e0:	0f 90       	pop	r0
      e2:	1f 90       	pop	r1
      e4:	18 95       	reti

000000e6 <__vector_2>:
ISR(INT1_vect)
{
      e6:	1f 92       	push	r1
      e8:	0f 92       	push	r0
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	0f 92       	push	r0
      ee:	11 24       	eor	r1, r1
      f0:	8f 93       	push	r24
      f2:	9f 93       	push	r25
	g_mod=1;
      f4:	81 e0       	ldi	r24, 0x01	; 1
      f6:	90 e0       	ldi	r25, 0x00	; 0
      f8:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <g_mod+0x1>
      fc:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <g_mod>
	
}
     100:	9f 91       	pop	r25
     102:	8f 91       	pop	r24
     104:	0f 90       	pop	r0
     106:	0f be       	out	0x3f, r0	; 63
     108:	0f 90       	pop	r0
     10a:	1f 90       	pop	r1
     10c:	18 95       	reti

0000010e <Uart_Init>:
		}
	}
}

void Uart_Init(void){
	DDRD = (1<<DDD3);
     10e:	88 e0       	ldi	r24, 0x08	; 8
     110:	81 bb       	out	0x11, r24	; 17
	UCSR1A = 0x00;
     112:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = (1<<TXEN1) | (1<<RXCIE1);
     116:	98 e8       	ldi	r25, 0x88	; 136
     118:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = (1<<UCSZ11) | (1<<UCSZ10);
     11c:	96 e0       	ldi	r25, 0x06	; 6
     11e:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>

	UBRR1H = 0;
     122:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 8;
     126:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     12a:	08 95       	ret

0000012c <main>:



int main()
{
	DDRA=0xff;
     12c:	8f ef       	ldi	r24, 0xFF	; 255
     12e:	8a bb       	out	0x1a, r24	; 26
	DDRF=0x00;
     130:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRB = 0xff;
     134:	87 bb       	out	0x17, r24	; 23
	DDRD = 0x00;
     136:	11 ba       	out	0x11, r1	; 17
	DDRE=0x0f;
     138:	9f e0       	ldi	r25, 0x0F	; 15
     13a:	92 b9       	out	0x02, r25	; 2
	
	PORTA=0xff;
     13c:	8b bb       	out	0x1b, r24	; 27
	PORTE=0x0A;
     13e:	8a e0       	ldi	r24, 0x0A	; 10
     140:	83 b9       	out	0x03, r24	; 3
	
	TCCR0=(0<<WGM01)|(0<<WGM00)|(0<<COM01)|(0<<COM00)|(1<<CS02)|(1<<CS01)|(1<<CS00);
     142:	97 e0       	ldi	r25, 0x07	; 7
     144:	93 bf       	out	0x33, r25	; 51
	TIMSK=(1<<TOIE0);
     146:	91 e0       	ldi	r25, 0x01	; 1
     148:	97 bf       	out	0x37, r25	; 55
	
	TCCR1A =(1<<COM1A1)|(0<<COM1A0)|(1<<COM1B1)|(0<<COM1B0)|(1<<WGM11);
     14a:	92 ea       	ldi	r25, 0xA2	; 162
     14c:	9f bd       	out	0x2f, r25	; 47
	TCCR1B =(1<<WGM13)|(1<<WGM12)|(0<<CS02)|(0<<CS01)|(1<<CS00);
     14e:	99 e1       	ldi	r25, 0x19	; 25
     150:	9e bd       	out	0x2e, r25	; 46
	EICRA = (1<<ISC01)|(1<<ISC11);
     152:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = (1<<INT1)|(1<<INT0);
     156:	83 e0       	ldi	r24, 0x03	; 3
     158:	89 bf       	out	0x39, r24	; 57
	
	ADMUX=0x40;
     15a:	80 e4       	ldi	r24, 0x40	; 64
     15c:	87 b9       	out	0x07, r24	; 7
	ADCSRA=0x87;
     15e:	87 e8       	ldi	r24, 0x87	; 135
     160:	86 b9       	out	0x06, r24	; 6
	ICR1=799;
     162:	8f e1       	ldi	r24, 0x1F	; 31
     164:	93 e0       	ldi	r25, 0x03	; 3
     166:	97 bd       	out	0x27, r25	; 39
     168:	86 bd       	out	0x26, r24	; 38
	OCR1A=0;
     16a:	1b bc       	out	0x2b, r1	; 43
     16c:	1a bc       	out	0x2a, r1	; 42
	OCR1B=0;
     16e:	19 bc       	out	0x29, r1	; 41
     170:	18 bc       	out	0x28, r1	; 40
	
	Uart_Init();
     172:	cd df       	rcall	.-102    	; 0x10e <Uart_Init>
	TCNT0=100;
     174:	84 e6       	ldi	r24, 0x64	; 100
     176:	82 bf       	out	0x32, r24	; 50
	sei();
     178:	78 94       	sei
	
	while(1){
		
		if(line_count>=3&&mod==1)
     17a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <line_count>
     17e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <line_count+0x1>
     182:	03 97       	sbiw	r24, 0x03	; 3
     184:	d4 f3       	brlt	.-12     	; 0x17a <main+0x4e>
     186:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <mod>
     18a:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <mod+0x1>
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	a1 f7       	brne	.-24     	; 0x17a <main+0x4e>
		{
			OCR1A=0;
     192:	1b bc       	out	0x2b, r1	; 43
     194:	1a bc       	out	0x2a, r1	; 42
			OCR1B=0;
     196:	19 bc       	out	0x29, r1	; 41
     198:	18 bc       	out	0x28, r1	; 40
			break;
		}
	}
}
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	08 95       	ret

000001a0 <Uart_Transmit>:
	UBRR1H = 0;
	UBRR1L = 8;
}

void Uart_Transmit(unsigned char data){
	while(!(UCSR1A & (1<<UDRE1)));
     1a0:	eb e9       	ldi	r30, 0x9B	; 155
     1a2:	f0 e0       	ldi	r31, 0x00	; 0
     1a4:	90 81       	ld	r25, Z
     1a6:	95 ff       	sbrs	r25, 5
     1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <Uart_Transmit+0x4>
	UDR1 = data;
     1aa:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     1ae:	08 95       	ret

000001b0 <UART1_Transnum>:
}

void UART1_Transnum(int num){
     1b0:	0f 93       	push	r16
     1b2:	1f 93       	push	r17
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	ec 01       	movw	r28, r24
	if(num <0)
     1ba:	99 23       	and	r25, r25
     1bc:	2c f4       	brge	.+10     	; 0x1c8 <UART1_Transnum+0x18>
	{
		Uart_Transmit('-');
     1be:	8d e2       	ldi	r24, 0x2D	; 45
     1c0:	ef df       	rcall	.-34     	; 0x1a0 <Uart_Transmit>
		num = -num;
     1c2:	d1 95       	neg	r29
     1c4:	c1 95       	neg	r28
     1c6:	d1 09       	sbc	r29, r1
	}
	Uart_Transmit(((num%10000)/1000)+48);
     1c8:	ce 01       	movw	r24, r28
     1ca:	60 e1       	ldi	r22, 0x10	; 16
     1cc:	77 e2       	ldi	r23, 0x27	; 39
     1ce:	98 d7       	rcall	.+3888   	; 0x1100 <__divmodhi4>
     1d0:	08 ee       	ldi	r16, 0xE8	; 232
     1d2:	13 e0       	ldi	r17, 0x03	; 3
     1d4:	b8 01       	movw	r22, r16
     1d6:	94 d7       	rcall	.+3880   	; 0x1100 <__divmodhi4>
     1d8:	80 e3       	ldi	r24, 0x30	; 48
     1da:	86 0f       	add	r24, r22
     1dc:	e1 df       	rcall	.-62     	; 0x1a0 <Uart_Transmit>
	Uart_Transmit(((num%1000)/100)+48);
     1de:	ce 01       	movw	r24, r28
     1e0:	b8 01       	movw	r22, r16
     1e2:	8e d7       	rcall	.+3868   	; 0x1100 <__divmodhi4>
     1e4:	04 e6       	ldi	r16, 0x64	; 100
     1e6:	10 e0       	ldi	r17, 0x00	; 0
     1e8:	b8 01       	movw	r22, r16
     1ea:	8a d7       	rcall	.+3860   	; 0x1100 <__divmodhi4>
     1ec:	80 e3       	ldi	r24, 0x30	; 48
     1ee:	86 0f       	add	r24, r22
     1f0:	d7 df       	rcall	.-82     	; 0x1a0 <Uart_Transmit>
	Uart_Transmit(((num%100)/10)+48);
     1f2:	ce 01       	movw	r24, r28
     1f4:	b8 01       	movw	r22, r16
     1f6:	84 d7       	rcall	.+3848   	; 0x1100 <__divmodhi4>
     1f8:	0a e0       	ldi	r16, 0x0A	; 10
     1fa:	10 e0       	ldi	r17, 0x00	; 0
     1fc:	b8 01       	movw	r22, r16
     1fe:	80 d7       	rcall	.+3840   	; 0x1100 <__divmodhi4>
     200:	80 e3       	ldi	r24, 0x30	; 48
     202:	86 0f       	add	r24, r22
     204:	cd df       	rcall	.-102    	; 0x1a0 <Uart_Transmit>
	Uart_Transmit(((num%10)/1)+48);
     206:	ce 01       	movw	r24, r28
     208:	b8 01       	movw	r22, r16
     20a:	7a d7       	rcall	.+3828   	; 0x1100 <__divmodhi4>
     20c:	80 5d       	subi	r24, 0xD0	; 208
     20e:	c8 df       	rcall	.-112    	; 0x1a0 <Uart_Transmit>
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	1f 91       	pop	r17
     216:	0f 91       	pop	r16
     218:	08 95       	ret

0000021a <__vector_16>:
     21a:	1f 92       	push	r1
     21c:	0f 92       	push	r0
	g_mod=1;
	
}

ISR(TIMER0_OVF_vect)
{
     21e:	0f b6       	in	r0, 0x3f	; 63
     220:	0f 92       	push	r0
     222:	11 24       	eor	r1, r1
     224:	0b b6       	in	r0, 0x3b	; 59
     226:	0f 92       	push	r0
     228:	8f 92       	push	r8
     22a:	9f 92       	push	r9
     22c:	af 92       	push	r10
     22e:	bf 92       	push	r11
     230:	cf 92       	push	r12
     232:	df 92       	push	r13
     234:	ef 92       	push	r14
     236:	ff 92       	push	r15
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	2f 93       	push	r18
     23e:	3f 93       	push	r19
     240:	4f 93       	push	r20
     242:	5f 93       	push	r21
     244:	6f 93       	push	r22
     246:	7f 93       	push	r23
     248:	8f 93       	push	r24
     24a:	9f 93       	push	r25
     24c:	af 93       	push	r26
     24e:	bf 93       	push	r27
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	ef 93       	push	r30
     256:	ff 93       	push	r31
	TCNT0=100;
     258:	84 e6       	ldi	r24, 0x64	; 100
     25a:	82 bf       	out	0x32, r24	; 50
	for(i=0;i<8;i++)
     25c:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <i+0x1>
     260:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <i>
     264:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     268:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     26c:	08 97       	sbiw	r24, 0x08	; 8
     26e:	24 f5       	brge	.+72     	; 0x2b8 <__vector_16+0x9e>
	{
		ADMUX=(0x40)|i;
     270:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     274:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     278:	80 64       	ori	r24, 0x40	; 64
     27a:	87 b9       	out	0x07, r24	; 7
		ADCSRA |=(1<<ADSC);
     27c:	36 9a       	sbi	0x06, 6	; 6
		while(!(ADCSRA&(1<<ADIF)));
     27e:	34 9b       	sbis	0x06, 4	; 6
     280:	fe cf       	rjmp	.-4      	; 0x27e <__vector_16+0x64>
		adc[i]=ADC;
     282:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     286:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     28a:	84 b1       	in	r24, 0x04	; 4
     28c:	95 b1       	in	r25, 0x05	; 5
     28e:	ee 0f       	add	r30, r30
     290:	ff 1f       	adc	r31, r31
     292:	e6 59       	subi	r30, 0x96	; 150
     294:	fe 4f       	sbci	r31, 0xFE	; 254
     296:	91 83       	std	Z+1, r25	; 0x01
     298:	80 83       	st	Z, r24
}

ISR(TIMER0_OVF_vect)
{
	TCNT0=100;
	for(i=0;i<8;i++)
     29a:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     29e:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     2a2:	01 96       	adiw	r24, 0x01	; 1
     2a4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <i+0x1>
     2a8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <i>
     2ac:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     2b0:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     2b4:	08 97       	sbiw	r24, 0x08	; 8
     2b6:	e4 f2       	brlt	.-72     	; 0x270 <__vector_16+0x56>
		ADCSRA |=(1<<ADSC);
		while(!(ADCSRA&(1<<ADIF)));
		adc[i]=ADC;
	}
	
	if(g_mod==0){
     2b8:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <g_mod>
     2bc:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <g_mod+0x1>
     2c0:	89 2b       	or	r24, r25
     2c2:	09 f0       	breq	.+2      	; 0x2c6 <__vector_16+0xac>
     2c4:	fd c0       	rjmp	.+506    	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
		for(i=0;i<8;i++)
     2c6:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <i+0x1>
     2ca:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <i>
     2ce:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     2d2:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     2d6:	08 97       	sbiw	r24, 0x08	; 8
     2d8:	0c f0       	brlt	.+2      	; 0x2dc <__vector_16+0xc2>
     2da:	74 c0       	rjmp	.+232    	; 0x3c4 <__vector_16+0x1aa>
		{
			if(adc[i]>=adc_max[i]) adc_max[i]=adc[i];
     2dc:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     2e0:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     2e4:	ee 0f       	add	r30, r30
     2e6:	ff 1f       	adc	r31, r31
     2e8:	e6 59       	subi	r30, 0x96	; 150
     2ea:	fe 4f       	sbci	r31, 0xFE	; 254
     2ec:	20 81       	ld	r18, Z
     2ee:	31 81       	ldd	r19, Z+1	; 0x01
     2f0:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     2f4:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     2f8:	ee 0f       	add	r30, r30
     2fa:	ff 1f       	adc	r31, r31
     2fc:	e8 5c       	subi	r30, 0xC8	; 200
     2fe:	fe 4f       	sbci	r31, 0xFE	; 254
     300:	80 81       	ld	r24, Z
     302:	91 81       	ldd	r25, Z+1	; 0x01
     304:	28 17       	cp	r18, r24
     306:	39 07       	cpc	r19, r25
     308:	ac f0       	brlt	.+42     	; 0x334 <__vector_16+0x11a>
     30a:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     30e:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     312:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <i>
     316:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <i+0x1>
     31a:	aa 0f       	add	r26, r26
     31c:	bb 1f       	adc	r27, r27
     31e:	a6 59       	subi	r26, 0x96	; 150
     320:	be 4f       	sbci	r27, 0xFE	; 254
     322:	8d 91       	ld	r24, X+
     324:	9c 91       	ld	r25, X
     326:	ee 0f       	add	r30, r30
     328:	ff 1f       	adc	r31, r31
     32a:	e8 5c       	subi	r30, 0xC8	; 200
     32c:	fe 4f       	sbci	r31, 0xFE	; 254
     32e:	91 83       	std	Z+1, r25	; 0x01
     330:	80 83       	st	Z, r24
     332:	2b c0       	rjmp	.+86     	; 0x38a <__vector_16+0x170>
			else if(adc[i]<=adc_min[i]) adc_min[i]=adc[i];
     334:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     338:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     33c:	ee 0f       	add	r30, r30
     33e:	ff 1f       	adc	r31, r31
     340:	e6 59       	subi	r30, 0x96	; 150
     342:	fe 4f       	sbci	r31, 0xFE	; 254
     344:	20 81       	ld	r18, Z
     346:	31 81       	ldd	r19, Z+1	; 0x01
     348:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     34c:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     350:	ee 0f       	add	r30, r30
     352:	ff 1f       	adc	r31, r31
     354:	e0 5f       	subi	r30, 0xF0	; 240
     356:	fe 4f       	sbci	r31, 0xFE	; 254
     358:	80 81       	ld	r24, Z
     35a:	91 81       	ldd	r25, Z+1	; 0x01
     35c:	82 17       	cp	r24, r18
     35e:	93 07       	cpc	r25, r19
     360:	a4 f0       	brlt	.+40     	; 0x38a <__vector_16+0x170>
     362:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     366:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     36a:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <i>
     36e:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <i+0x1>
     372:	aa 0f       	add	r26, r26
     374:	bb 1f       	adc	r27, r27
     376:	a6 59       	subi	r26, 0x96	; 150
     378:	be 4f       	sbci	r27, 0xFE	; 254
     37a:	8d 91       	ld	r24, X+
     37c:	9c 91       	ld	r25, X
     37e:	ee 0f       	add	r30, r30
     380:	ff 1f       	adc	r31, r31
     382:	e0 5f       	subi	r30, 0xF0	; 240
     384:	fe 4f       	sbci	r31, 0xFE	; 254
     386:	91 83       	std	Z+1, r25	; 0x01
     388:	80 83       	st	Z, r24
			UART1_Transnum(adc[i]);
     38a:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     38e:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     392:	ee 0f       	add	r30, r30
     394:	ff 1f       	adc	r31, r31
     396:	e6 59       	subi	r30, 0x96	; 150
     398:	fe 4f       	sbci	r31, 0xFE	; 254
     39a:	80 81       	ld	r24, Z
     39c:	91 81       	ldd	r25, Z+1	; 0x01
     39e:	08 df       	rcall	.-496    	; 0x1b0 <UART1_Transnum>
			Uart_Transmit(' ');
     3a0:	80 e2       	ldi	r24, 0x20	; 32
     3a2:	fe de       	rcall	.-516    	; 0x1a0 <Uart_Transmit>
		while(!(ADCSRA&(1<<ADIF)));
		adc[i]=ADC;
	}
	
	if(g_mod==0){
		for(i=0;i<8;i++)
     3a4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     3a8:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     3ac:	01 96       	adiw	r24, 0x01	; 1
     3ae:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <i+0x1>
     3b2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <i>
     3b6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     3ba:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     3be:	08 97       	sbiw	r24, 0x08	; 8
     3c0:	0c f4       	brge	.+2      	; 0x3c4 <__vector_16+0x1aa>
     3c2:	8c cf       	rjmp	.-232    	; 0x2dc <__vector_16+0xc2>
			if(adc[i]>=adc_max[i]) adc_max[i]=adc[i];
			else if(adc[i]<=adc_min[i]) adc_min[i]=adc[i];
			UART1_Transnum(adc[i]);
			Uart_Transmit(' ');
		}
		for(i=0;i<8;i++)
     3c4:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <i+0x1>
     3c8:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <i>
     3cc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     3d0:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     3d4:	08 97       	sbiw	r24, 0x08	; 8
     3d6:	4c f5       	brge	.+82     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
		{
			UART1_Transnum( adc_max[i]);
     3d8:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     3dc:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     3e0:	ee 0f       	add	r30, r30
     3e2:	ff 1f       	adc	r31, r31
     3e4:	e8 5c       	subi	r30, 0xC8	; 200
     3e6:	fe 4f       	sbci	r31, 0xFE	; 254
     3e8:	80 81       	ld	r24, Z
     3ea:	91 81       	ldd	r25, Z+1	; 0x01
			Uart_Transmit(' ');
     3ec:	e1 de       	rcall	.-574    	; 0x1b0 <UART1_Transnum>
     3ee:	80 e2       	ldi	r24, 0x20	; 32
     3f0:	d7 de       	rcall	.-594    	; 0x1a0 <Uart_Transmit>
			UART1_Transnum( adc_min[i]);
     3f2:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     3f6:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     3fa:	ee 0f       	add	r30, r30
     3fc:	ff 1f       	adc	r31, r31
     3fe:	e0 5f       	subi	r30, 0xF0	; 240
     400:	fe 4f       	sbci	r31, 0xFE	; 254
     402:	80 81       	ld	r24, Z
     404:	91 81       	ldd	r25, Z+1	; 0x01
			Uart_Transmit(' ');
     406:	d4 de       	rcall	.-600    	; 0x1b0 <UART1_Transnum>
     408:	80 e2       	ldi	r24, 0x20	; 32
     40a:	ca de       	rcall	.-620    	; 0x1a0 <Uart_Transmit>
			if(adc[i]>=adc_max[i]) adc_max[i]=adc[i];
			else if(adc[i]<=adc_min[i]) adc_min[i]=adc[i];
			UART1_Transnum(adc[i]);
			Uart_Transmit(' ');
		}
		for(i=0;i<8;i++)
     40c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     410:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     414:	01 96       	adiw	r24, 0x01	; 1
     416:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <i+0x1>
     41a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <i>
     41e:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     422:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     426:	08 97       	sbiw	r24, 0x08	; 8
			UART1_Transnum( adc_max[i]);
			Uart_Transmit(' ');
			UART1_Transnum( adc_min[i]);
			Uart_Transmit(' ');
		}
		Uart_Transmit(0x0d);
     428:	bc f2       	brlt	.-82     	; 0x3d8 <__vector_16+0x1be>
     42a:	8d e0       	ldi	r24, 0x0D	; 13
     42c:	b9 de       	rcall	.-654    	; 0x1a0 <Uart_Transmit>
		for(i=0;i<8;i++)
     42e:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <i+0x1>
     432:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <i>
     436:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     43a:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     43e:	08 97       	sbiw	r24, 0x08	; 8
     440:	0c f0       	brlt	.+2      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     442:	1b c4       	rjmp	.+2102   	; 0xc7a <__LOCK_REGION_LENGTH__+0x87a>
		{
			if(adc[i]<800)  PORTA&=~(1<<i);
     444:	21 e0       	ldi	r18, 0x01	; 1
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     44c:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     450:	ee 0f       	add	r30, r30
     452:	ff 1f       	adc	r31, r31
     454:	e6 59       	subi	r30, 0x96	; 150
     456:	fe 4f       	sbci	r31, 0xFE	; 254
     458:	80 81       	ld	r24, Z
     45a:	91 81       	ldd	r25, Z+1	; 0x01
     45c:	80 32       	cpi	r24, 0x20	; 32
     45e:	93 40       	sbci	r25, 0x03	; 3
     460:	8c f4       	brge	.+34     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     462:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     466:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     46a:	4b b3       	in	r20, 0x1b	; 27
     46c:	b9 01       	movw	r22, r18
     46e:	02 c0       	rjmp	.+4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     470:	66 0f       	add	r22, r22
     472:	77 1f       	adc	r23, r23
     474:	8a 95       	dec	r24
     476:	e2 f7       	brpl	.-8      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     478:	cb 01       	movw	r24, r22
     47a:	80 95       	com	r24
     47c:	90 95       	com	r25
     47e:	84 23       	and	r24, r20
     480:	8b bb       	out	0x1b, r24	; 27
     482:	0e c0       	rjmp	.+28     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
			else  PORTA|=(1<<i);
     484:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     488:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     48c:	4b b3       	in	r20, 0x1b	; 27
     48e:	b9 01       	movw	r22, r18
     490:	02 c0       	rjmp	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     492:	66 0f       	add	r22, r22
     494:	77 1f       	adc	r23, r23
     496:	8a 95       	dec	r24
     498:	e2 f7       	brpl	.-8      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
     49a:	cb 01       	movw	r24, r22
     49c:	84 2b       	or	r24, r20
     49e:	8b bb       	out	0x1b, r24	; 27
			Uart_Transmit(' ');
			UART1_Transnum( adc_min[i]);
			Uart_Transmit(' ');
		}
		Uart_Transmit(0x0d);
		for(i=0;i<8;i++)
     4a0:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     4a4:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     4a8:	01 96       	adiw	r24, 0x01	; 1
     4aa:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <i+0x1>
     4ae:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <i>
     4b2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     4b6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     4ba:	08 97       	sbiw	r24, 0x08	; 8
     4bc:	2c f2       	brlt	.-118    	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     4be:	dd c3       	rjmp	.+1978   	; 0xc7a <__LOCK_REGION_LENGTH__+0x87a>
		{
			if(adc[i]<800)  PORTA&=~(1<<i);
			else  PORTA|=(1<<i);
		}
	}
	else if(g_mod==1){
     4c0:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <g_mod>
     4c4:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <g_mod+0x1>
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	09 f0       	breq	.+2      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4cc:	9e c3       	rjmp	.+1852   	; 0xc0a <__LOCK_REGION_LENGTH__+0x80a>
		PORTE=0x0A;
     4ce:	8a e0       	ldi	r24, 0x0A	; 10
     4d0:	83 b9       	out	0x03, r24	; 3
		sense_value=0;
     4d2:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <sense_value+0x1>
     4d6:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <sense_value>
		
		for(i=0;i<8;i++)
     4da:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <i+0x1>
     4de:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <i>
     4e2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     4e6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     4ea:	08 97       	sbiw	r24, 0x08	; 8
     4ec:	0c f0       	brlt	.+2      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4ee:	e0 c0       	rjmp	.+448    	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
		{
			normalization[i]=(double)(adc[i]-adc_min[i])/(adc_max[i]-adc_min[i])*100;
			
			if(normalization[i]<55)  PORTA&=~(1<<i);
     4f0:	c1 e0       	ldi	r28, 0x01	; 1
     4f2:	d0 e0       	ldi	r29, 0x00	; 0
		PORTE=0x0A;
		sense_value=0;
		
		for(i=0;i<8;i++)
		{
			normalization[i]=(double)(adc[i]-adc_min[i])/(adc_max[i]-adc_min[i])*100;
     4f4:	00 91 36 01 	lds	r16, 0x0136	; 0x800136 <i>
     4f8:	10 91 37 01 	lds	r17, 0x0137	; 0x800137 <i+0x1>
     4fc:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     500:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     504:	ee 0f       	add	r30, r30
     506:	ff 1f       	adc	r31, r31
     508:	e6 59       	subi	r30, 0x96	; 150
     50a:	fe 4f       	sbci	r31, 0xFE	; 254
     50c:	60 81       	ld	r22, Z
     50e:	71 81       	ldd	r23, Z+1	; 0x01
     510:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     514:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     518:	ee 0f       	add	r30, r30
     51a:	ff 1f       	adc	r31, r31
     51c:	e0 5f       	subi	r30, 0xF0	; 240
     51e:	fe 4f       	sbci	r31, 0xFE	; 254
     520:	80 81       	ld	r24, Z
     522:	91 81       	ldd	r25, Z+1	; 0x01
     524:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     528:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     52c:	ee 0f       	add	r30, r30
     52e:	ff 1f       	adc	r31, r31
     530:	e8 5c       	subi	r30, 0xC8	; 200
     532:	fe 4f       	sbci	r31, 0xFE	; 254
     534:	e0 80       	ld	r14, Z
     536:	f1 80       	ldd	r15, Z+1	; 0x01
     538:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     53c:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     540:	ee 0f       	add	r30, r30
     542:	ff 1f       	adc	r31, r31
     544:	e0 5f       	subi	r30, 0xF0	; 240
     546:	fe 4f       	sbci	r31, 0xFE	; 254
     548:	c0 80       	ld	r12, Z
     54a:	d1 80       	ldd	r13, Z+1	; 0x01
     54c:	68 1b       	sub	r22, r24
     54e:	79 0b       	sbc	r23, r25
     550:	07 2e       	mov	r0, r23
     552:	00 0c       	add	r0, r0
     554:	88 0b       	sbc	r24, r24
     556:	99 0b       	sbc	r25, r25
     558:	bc d4       	rcall	.+2424   	; 0xed2 <__floatsisf>
     55a:	4b 01       	movw	r8, r22
     55c:	5c 01       	movw	r10, r24
     55e:	b7 01       	movw	r22, r14
     560:	6c 19       	sub	r22, r12
     562:	7d 09       	sbc	r23, r13
     564:	07 2e       	mov	r0, r23
     566:	00 0c       	add	r0, r0
     568:	88 0b       	sbc	r24, r24
     56a:	99 0b       	sbc	r25, r25
     56c:	b2 d4       	rcall	.+2404   	; 0xed2 <__floatsisf>
     56e:	9b 01       	movw	r18, r22
     570:	ac 01       	movw	r20, r24
     572:	c5 01       	movw	r24, r10
     574:	b4 01       	movw	r22, r8
     576:	12 d4       	rcall	.+2084   	; 0xd9c <__divsf3>
     578:	20 e0       	ldi	r18, 0x00	; 0
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	48 ec       	ldi	r20, 0xC8	; 200
     57e:	52 e4       	ldi	r21, 0x42	; 66
     580:	5c d5       	rcall	.+2744   	; 0x103a <__mulsf3>
     582:	00 0f       	add	r16, r16
     584:	11 1f       	adc	r17, r17
     586:	00 0f       	add	r16, r16
     588:	11 1f       	adc	r17, r17
     58a:	f8 01       	movw	r30, r16
     58c:	e6 5b       	subi	r30, 0xB6	; 182
     58e:	fe 4f       	sbci	r31, 0xFE	; 254
     590:	60 83       	st	Z, r22
     592:	71 83       	std	Z+1, r23	; 0x01
     594:	82 83       	std	Z+2, r24	; 0x02
     596:	93 83       	std	Z+3, r25	; 0x03
			
			if(normalization[i]<55)  PORTA&=~(1<<i);
     598:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     59c:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     5a0:	ee 0f       	add	r30, r30
     5a2:	ff 1f       	adc	r31, r31
     5a4:	ee 0f       	add	r30, r30
     5a6:	ff 1f       	adc	r31, r31
     5a8:	e6 5b       	subi	r30, 0xB6	; 182
     5aa:	fe 4f       	sbci	r31, 0xFE	; 254
     5ac:	60 81       	ld	r22, Z
     5ae:	71 81       	ldd	r23, Z+1	; 0x01
     5b0:	82 81       	ldd	r24, Z+2	; 0x02
     5b2:	93 81       	ldd	r25, Z+3	; 0x03
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	4c e5       	ldi	r20, 0x5C	; 92
     5ba:	52 e4       	ldi	r21, 0x42	; 66
     5bc:	eb d3       	rcall	.+2006   	; 0xd94 <__cmpsf2>
     5be:	88 23       	and	r24, r24
     5c0:	8c f4       	brge	.+34     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
     5c2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     5c6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     5ca:	2b b3       	in	r18, 0x1b	; 27
     5cc:	ae 01       	movw	r20, r28
     5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
     5d0:	44 0f       	add	r20, r20
     5d2:	55 1f       	adc	r21, r21
     5d4:	8a 95       	dec	r24
     5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
     5d8:	ca 01       	movw	r24, r20
     5da:	80 95       	com	r24
     5dc:	90 95       	com	r25
     5de:	82 23       	and	r24, r18
     5e0:	8b bb       	out	0x1b, r24	; 27
     5e2:	0e c0       	rjmp	.+28     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
			else  PORTA|=(1<<i);
     5e4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     5e8:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     5ec:	2b b3       	in	r18, 0x1b	; 27
     5ee:	be 01       	movw	r22, r28
     5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
     5f2:	66 0f       	add	r22, r22
     5f4:	77 1f       	adc	r23, r23
     5f6:	8a 95       	dec	r24
     5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
     5fa:	cb 01       	movw	r24, r22
     5fc:	82 2b       	or	r24, r18
     5fe:	8b bb       	out	0x1b, r24	; 27
			
			UART1_Transnum((int)normalization[i]);
     600:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     604:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     608:	ee 0f       	add	r30, r30
     60a:	ff 1f       	adc	r31, r31
     60c:	ee 0f       	add	r30, r30
     60e:	ff 1f       	adc	r31, r31
     610:	e6 5b       	subi	r30, 0xB6	; 182
     612:	fe 4f       	sbci	r31, 0xFE	; 254
     614:	60 81       	ld	r22, Z
     616:	71 81       	ldd	r23, Z+1	; 0x01
     618:	82 81       	ldd	r24, Z+2	; 0x02
     61a:	93 81       	ldd	r25, Z+3	; 0x03
     61c:	27 d4       	rcall	.+2126   	; 0xe6c <__fixsfsi>
     61e:	cb 01       	movw	r24, r22
			Uart_Transmit(' ');
     620:	c7 dd       	rcall	.-1138   	; 0x1b0 <UART1_Transnum>
     622:	80 e2       	ldi	r24, 0x20	; 32
     624:	bd dd       	rcall	.-1158   	; 0x1a0 <Uart_Transmit>
			
			sense_value+=normalization[i]*value[i];
     626:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     62a:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     62e:	ee 0f       	add	r30, r30
     630:	ff 1f       	adc	r31, r31
     632:	ee 0f       	add	r30, r30
     634:	ff 1f       	adc	r31, r31
     636:	e6 5b       	subi	r30, 0xB6	; 182
     638:	fe 4f       	sbci	r31, 0xFE	; 254
     63a:	c0 80       	ld	r12, Z
     63c:	d1 80       	ldd	r13, Z+1	; 0x01
     63e:	e2 80       	ldd	r14, Z+2	; 0x02
     640:	f3 80       	ldd	r15, Z+3	; 0x03
     642:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <i>
     646:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <i+0x1>
     64a:	ee 0f       	add	r30, r30
     64c:	ff 1f       	adc	r31, r31
     64e:	e0 50       	subi	r30, 0x00	; 0
     650:	ff 4f       	sbci	r31, 0xFF	; 255
     652:	60 81       	ld	r22, Z
     654:	71 81       	ldd	r23, Z+1	; 0x01
     656:	00 91 34 01 	lds	r16, 0x0134	; 0x800134 <sense_value>
     65a:	10 91 35 01 	lds	r17, 0x0135	; 0x800135 <sense_value+0x1>
     65e:	07 2e       	mov	r0, r23
     660:	00 0c       	add	r0, r0
     662:	88 0b       	sbc	r24, r24
     664:	99 0b       	sbc	r25, r25
     666:	35 d4       	rcall	.+2154   	; 0xed2 <__floatsisf>
     668:	a7 01       	movw	r20, r14
     66a:	96 01       	movw	r18, r12
     66c:	e6 d4       	rcall	.+2508   	; 0x103a <__mulsf3>
     66e:	6b 01       	movw	r12, r22
     670:	7c 01       	movw	r14, r24
     672:	b8 01       	movw	r22, r16
     674:	11 0f       	add	r17, r17
     676:	88 0b       	sbc	r24, r24
     678:	99 0b       	sbc	r25, r25
     67a:	2b d4       	rcall	.+2134   	; 0xed2 <__floatsisf>
     67c:	9b 01       	movw	r18, r22
     67e:	ac 01       	movw	r20, r24
     680:	c7 01       	movw	r24, r14
     682:	b6 01       	movw	r22, r12
     684:	23 d3       	rcall	.+1606   	; 0xccc <__addsf3>
     686:	f2 d3       	rcall	.+2020   	; 0xe6c <__fixsfsi>
     688:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <sense_value+0x1>
     68c:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <sense_value>
	}
	else if(g_mod==1){
		PORTE=0x0A;
		sense_value=0;
		
		for(i=0;i<8;i++)
     690:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     694:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     698:	01 96       	adiw	r24, 0x01	; 1
     69a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <i+0x1>
     69e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <i>
     6a2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <i>
     6a6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <i+0x1>
     6aa:	08 97       	sbiw	r24, 0x08	; 8
			UART1_Transnum((int)normalization[i]);
			Uart_Transmit(' ');
			
			sense_value+=normalization[i]*value[i];
		}
		UART1_Transnum(sense_value);
     6ac:	0c f4       	brge	.+2      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
     6ae:	22 cf       	rjmp	.-444    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     6b0:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <sense_value>
     6b4:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <sense_value+0x1>
		Uart_Transmit(0x0d);
     6b8:	7b dd       	rcall	.-1290   	; 0x1b0 <UART1_Transnum>
     6ba:	8d e0       	ldi	r24, 0x0D	; 13
     6bc:	71 dd       	rcall	.-1310   	; 0x1a0 <Uart_Transmit>
		
		if(line_count>=3)
     6be:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <line_count>
     6c2:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <line_count+0x1>
     6c6:	03 97       	sbiw	r24, 0x03	; 3
     6c8:	5c f0       	brlt	.+22     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
		{
			OCR1A=0;
     6ca:	1b bc       	out	0x2b, r1	; 43
			OCR1B=0;
     6cc:	1a bc       	out	0x2a, r1	; 42
     6ce:	19 bc       	out	0x29, r1	; 41
			stop=1;
     6d0:	18 bc       	out	0x28, r1	; 40
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
     6da:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
		}
		else if(normalization[0]>55&&normalization[1]>55&&normalization[2]>55&&normalization[3]>55&&normalization[4]>55&&normalization[5]>55&&normalization[6]>55&&normalization[7]>55)
     6de:	66 c1       	rjmp	.+716    	; 0x9ac <__LOCK_REGION_LENGTH__+0x5ac>
     6e0:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <normalization>
     6e4:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <normalization+0x1>
     6e8:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <normalization+0x2>
     6ec:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <normalization+0x3>
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	4c e5       	ldi	r20, 0x5C	; 92
     6f6:	52 e4       	ldi	r21, 0x42	; 66
     6f8:	9c d4       	rcall	.+2360   	; 0x1032 <__gesf2>
     6fa:	18 16       	cp	r1, r24
     6fc:	0c f0       	brlt	.+2      	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
     6fe:	8b c0       	rjmp	.+278    	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     700:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <normalization+0x4>
     704:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <normalization+0x5>
     708:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <normalization+0x6>
     70c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <normalization+0x7>
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	4c e5       	ldi	r20, 0x5C	; 92
     716:	52 e4       	ldi	r21, 0x42	; 66
     718:	8c d4       	rcall	.+2328   	; 0x1032 <__gesf2>
     71a:	18 16       	cp	r1, r24
     71c:	0c f0       	brlt	.+2      	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
     71e:	7b c0       	rjmp	.+246    	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     720:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <normalization+0x8>
     724:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <normalization+0x9>
     728:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <normalization+0xa>
     72c:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <normalization+0xb>
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	4c e5       	ldi	r20, 0x5C	; 92
     736:	52 e4       	ldi	r21, 0x42	; 66
     738:	7c d4       	rcall	.+2296   	; 0x1032 <__gesf2>
     73a:	18 16       	cp	r1, r24
     73c:	0c f0       	brlt	.+2      	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
     73e:	6b c0       	rjmp	.+214    	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     740:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <normalization+0xc>
     744:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <normalization+0xd>
     748:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <normalization+0xe>
     74c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <normalization+0xf>
     750:	20 e0       	ldi	r18, 0x00	; 0
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	4c e5       	ldi	r20, 0x5C	; 92
     756:	52 e4       	ldi	r21, 0x42	; 66
     758:	6c d4       	rcall	.+2264   	; 0x1032 <__gesf2>
     75a:	18 16       	cp	r1, r24
     75c:	0c f0       	brlt	.+2      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
     75e:	5b c0       	rjmp	.+182    	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     760:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <normalization+0x10>
     764:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <normalization+0x11>
     768:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <normalization+0x12>
     76c:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <normalization+0x13>
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	4c e5       	ldi	r20, 0x5C	; 92
     776:	52 e4       	ldi	r21, 0x42	; 66
     778:	5c d4       	rcall	.+2232   	; 0x1032 <__gesf2>
     77a:	18 16       	cp	r1, r24
     77c:	0c f0       	brlt	.+2      	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
     77e:	4b c0       	rjmp	.+150    	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     780:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <normalization+0x14>
     784:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <normalization+0x15>
     788:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <normalization+0x16>
     78c:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <normalization+0x17>
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	4c e5       	ldi	r20, 0x5C	; 92
     796:	52 e4       	ldi	r21, 0x42	; 66
     798:	4c d4       	rcall	.+2200   	; 0x1032 <__gesf2>
     79a:	18 16       	cp	r1, r24
     79c:	0c f0       	brlt	.+2      	; 0x7a0 <__LOCK_REGION_LENGTH__+0x3a0>
     79e:	3b c0       	rjmp	.+118    	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     7a0:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <normalization+0x18>
     7a4:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <normalization+0x19>
     7a8:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <normalization+0x1a>
     7ac:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <normalization+0x1b>
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	4c e5       	ldi	r20, 0x5C	; 92
     7b6:	52 e4       	ldi	r21, 0x42	; 66
     7b8:	3c d4       	rcall	.+2168   	; 0x1032 <__gesf2>
     7ba:	18 16       	cp	r1, r24
     7bc:	64 f5       	brge	.+88     	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     7be:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <normalization+0x1c>
     7c2:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <normalization+0x1d>
     7c6:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <normalization+0x1e>
     7ca:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <normalization+0x1f>
     7ce:	20 e0       	ldi	r18, 0x00	; 0
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	4c e5       	ldi	r20, 0x5C	; 92
     7d4:	52 e4       	ldi	r21, 0x42	; 66
     7d6:	2d d4       	rcall	.+2138   	; 0x1032 <__gesf2>
     7d8:	18 16       	cp	r1, r24
     7da:	ec f4       	brge	.+58     	; 0x816 <__LOCK_REGION_LENGTH__+0x416>
     7dc:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <last_right>
		{
			if(last_right>=last_lest)
     7e0:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <last_right+0x1>
     7e4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <last_lest>
     7e8:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <last_lest+0x1>
     7ec:	28 17       	cp	r18, r24
     7ee:	39 07       	cpc	r19, r25
     7f0:	4c f0       	brlt	.+18     	; 0x804 <__LOCK_REGION_LENGTH__+0x404>
     7f2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <last_right>
			{
				OCR1A=last_right;
     7f6:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <last_right+0x1>
     7fa:	9b bd       	out	0x2b, r25	; 43
     7fc:	8a bd       	out	0x2a, r24	; 42
				OCR1B=0;
     7fe:	19 bc       	out	0x29, r1	; 41
     800:	18 bc       	out	0x28, r1	; 40
     802:	d4 c0       	rjmp	.+424    	; 0x9ac <__LOCK_REGION_LENGTH__+0x5ac>
			}
			else
			{
				OCR1A=0;
     804:	1b bc       	out	0x2b, r1	; 43
     806:	1a bc       	out	0x2a, r1	; 42
				OCR1B=last_lest;
     808:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <last_lest>
     80c:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <last_lest+0x1>
     810:	99 bd       	out	0x29, r25	; 41
     812:	88 bd       	out	0x28, r24	; 40
			}
		}
		else if((normalization[0]<55||normalization[1]<55)&&normalization[3]>55&&normalization[4]>55&&(normalization[6]<55||normalization[7]<55))
     814:	cb c0       	rjmp	.+406    	; 0x9ac <__LOCK_REGION_LENGTH__+0x5ac>
     816:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <normalization>
     81a:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <normalization+0x1>
     81e:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <normalization+0x2>
     822:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <normalization+0x3>
     826:	20 e0       	ldi	r18, 0x00	; 0
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	4c e5       	ldi	r20, 0x5C	; 92
     82c:	52 e4       	ldi	r21, 0x42	; 66
     82e:	b2 d2       	rcall	.+1380   	; 0xd94 <__cmpsf2>
     830:	88 23       	and	r24, r24
     832:	84 f0       	brlt	.+32     	; 0x854 <__LOCK_REGION_LENGTH__+0x454>
     834:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <normalization+0x4>
     838:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <normalization+0x5>
     83c:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <normalization+0x6>
     840:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <normalization+0x7>
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	4c e5       	ldi	r20, 0x5C	; 92
     84a:	52 e4       	ldi	r21, 0x42	; 66
     84c:	a3 d2       	rcall	.+1350   	; 0xd94 <__cmpsf2>
     84e:	88 23       	and	r24, r24
     850:	0c f0       	brlt	.+2      	; 0x854 <__LOCK_REGION_LENGTH__+0x454>
     852:	45 c0       	rjmp	.+138    	; 0x8de <__LOCK_REGION_LENGTH__+0x4de>
     854:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <normalization+0xc>
     858:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <normalization+0xd>
     85c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <normalization+0xe>
     860:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <normalization+0xf>
     864:	20 e0       	ldi	r18, 0x00	; 0
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	4c e5       	ldi	r20, 0x5C	; 92
     86a:	52 e4       	ldi	r21, 0x42	; 66
     86c:	e2 d3       	rcall	.+1988   	; 0x1032 <__gesf2>
     86e:	18 16       	cp	r1, r24
     870:	b4 f5       	brge	.+108    	; 0x8de <__LOCK_REGION_LENGTH__+0x4de>
     872:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <normalization+0x10>
     876:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <normalization+0x11>
     87a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <normalization+0x12>
     87e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <normalization+0x13>
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	4c e5       	ldi	r20, 0x5C	; 92
     888:	52 e4       	ldi	r21, 0x42	; 66
     88a:	d3 d3       	rcall	.+1958   	; 0x1032 <__gesf2>
     88c:	18 16       	cp	r1, r24
     88e:	3c f5       	brge	.+78     	; 0x8de <__LOCK_REGION_LENGTH__+0x4de>
     890:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <normalization+0x18>
     894:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <normalization+0x19>
     898:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <normalization+0x1a>
     89c:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <normalization+0x1b>
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	4c e5       	ldi	r20, 0x5C	; 92
     8a6:	52 e4       	ldi	r21, 0x42	; 66
     8a8:	75 d2       	rcall	.+1258   	; 0xd94 <__cmpsf2>
     8aa:	88 23       	and	r24, r24
     8ac:	7c f0       	brlt	.+30     	; 0x8cc <__LOCK_REGION_LENGTH__+0x4cc>
     8ae:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <normalization+0x1c>
     8b2:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <normalization+0x1d>
     8b6:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <normalization+0x1e>
     8ba:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <normalization+0x1f>
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	4c e5       	ldi	r20, 0x5C	; 92
     8c4:	52 e4       	ldi	r21, 0x42	; 66
     8c6:	66 d2       	rcall	.+1228   	; 0xd94 <__cmpsf2>
     8c8:	88 23       	and	r24, r24
		{
			OCR1A=799;
     8ca:	4c f4       	brge	.+18     	; 0x8de <__LOCK_REGION_LENGTH__+0x4de>
     8cc:	8f e1       	ldi	r24, 0x1F	; 31
     8ce:	93 e0       	ldi	r25, 0x03	; 3
     8d0:	9b bd       	out	0x2b, r25	; 43
			OCR1B=200;
     8d2:	8a bd       	out	0x2a, r24	; 42
     8d4:	88 ec       	ldi	r24, 0xC8	; 200
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	99 bd       	out	0x29, r25	; 41
     8da:	88 bd       	out	0x28, r24	; 40
		}
		else
		{
			rightocr=600+(sense_value/3), 
     8dc:	67 c0       	rjmp	.+206    	; 0x9ac <__LOCK_REGION_LENGTH__+0x5ac>
     8de:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <sense_value>
     8e2:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <sense_value+0x1>
     8e6:	23 e0       	ldi	r18, 0x03	; 3
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	b9 01       	movw	r22, r18
     8ec:	09 d4       	rcall	.+2066   	; 0x1100 <__divmodhi4>
     8ee:	cb 01       	movw	r24, r22
     8f0:	88 5a       	subi	r24, 0xA8	; 168
     8f2:	9d 4f       	sbci	r25, 0xFD	; 253
     8f4:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <rightocr+0x1>
     8f8:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <rightocr>
			leftocr=600-(sense_value/3);
     8fc:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <sense_value>
     900:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <sense_value+0x1>
     904:	b9 01       	movw	r22, r18
     906:	fc d3       	rcall	.+2040   	; 0x1100 <__divmodhi4>
     908:	88 e5       	ldi	r24, 0x58	; 88
     90a:	92 e0       	ldi	r25, 0x02	; 2
     90c:	86 1b       	sub	r24, r22
     90e:	97 0b       	sbc	r25, r23
     910:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <leftocr+0x1>
     914:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <leftocr>
     918:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <rightocr>
			if(rightocr>=799) rightocr=799;
     91c:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <rightocr+0x1>
     920:	8f 31       	cpi	r24, 0x1F	; 31
     922:	93 40       	sbci	r25, 0x03	; 3
     924:	3c f0       	brlt	.+14     	; 0x934 <__LOCK_REGION_LENGTH__+0x534>
     926:	8f e1       	ldi	r24, 0x1F	; 31
     928:	93 e0       	ldi	r25, 0x03	; 3
     92a:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <rightocr+0x1>
     92e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <rightocr>
     932:	0b c0       	rjmp	.+22     	; 0x94a <__LOCK_REGION_LENGTH__+0x54a>
     934:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <rightocr>
			else if(rightocr<=0) rightocr=0;
     938:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <rightocr+0x1>
     93c:	18 16       	cp	r1, r24
     93e:	19 06       	cpc	r1, r25
     940:	24 f0       	brlt	.+8      	; 0x94a <__LOCK_REGION_LENGTH__+0x54a>
     942:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <rightocr+0x1>
     946:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <rightocr>
     94a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <leftocr>
			if(leftocr>=799) leftocr=799;
     94e:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <leftocr+0x1>
     952:	8f 31       	cpi	r24, 0x1F	; 31
     954:	93 40       	sbci	r25, 0x03	; 3
     956:	3c f0       	brlt	.+14     	; 0x966 <__LOCK_REGION_LENGTH__+0x566>
     958:	8f e1       	ldi	r24, 0x1F	; 31
     95a:	93 e0       	ldi	r25, 0x03	; 3
     95c:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <leftocr+0x1>
     960:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <leftocr>
     964:	0b c0       	rjmp	.+22     	; 0x97c <__LOCK_REGION_LENGTH__+0x57c>
     966:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <leftocr>
			else if(leftocr<=0) leftocr=0;
     96a:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <leftocr+0x1>
     96e:	18 16       	cp	r1, r24
     970:	19 06       	cpc	r1, r25
     972:	24 f0       	brlt	.+8      	; 0x97c <__LOCK_REGION_LENGTH__+0x57c>
     974:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <leftocr+0x1>
     978:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <leftocr>
			OCR1A=rightocr;
     97c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <rightocr>
     980:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <rightocr+0x1>
     984:	9b bd       	out	0x2b, r25	; 43
     986:	8a bd       	out	0x2a, r24	; 42
			OCR1B=leftocr;
     988:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <leftocr>
     98c:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <leftocr+0x1>
     990:	99 bd       	out	0x29, r25	; 41
     992:	88 bd       	out	0x28, r24	; 40
			last_right=OCR1A, 
     994:	8a b5       	in	r24, 0x2a	; 42
     996:	9b b5       	in	r25, 0x2b	; 43
     998:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <last_right+0x1>
     99c:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <last_right>
			last_lest=OCR1B;
     9a0:	88 b5       	in	r24, 0x28	; 40
     9a2:	99 b5       	in	r25, 0x29	; 41
     9a4:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <last_lest+0x1>
     9a8:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <last_lest>
		}
		if(normalization[0]<55&&normalization[1]<55&&normalization[2]<55&&normalization[3]<55&&normalization[4]<55&&normalization[5]<55&&normalization[6]<55&&normalization[7]<55)
     9ac:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <normalization>
     9b0:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <normalization+0x1>
     9b4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <normalization+0x2>
     9b8:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <normalization+0x3>
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	4c e5       	ldi	r20, 0x5C	; 92
     9c2:	52 e4       	ldi	r21, 0x42	; 66
     9c4:	e7 d1       	rcall	.+974    	; 0xd94 <__cmpsf2>
     9c6:	88 23       	and	r24, r24
     9c8:	0c f0       	brlt	.+2      	; 0x9cc <__LOCK_REGION_LENGTH__+0x5cc>
     9ca:	7d c0       	rjmp	.+250    	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     9cc:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <normalization+0x4>
     9d0:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <normalization+0x5>
     9d4:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <normalization+0x6>
     9d8:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <normalization+0x7>
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	4c e5       	ldi	r20, 0x5C	; 92
     9e2:	52 e4       	ldi	r21, 0x42	; 66
     9e4:	d7 d1       	rcall	.+942    	; 0xd94 <__cmpsf2>
     9e6:	88 23       	and	r24, r24
     9e8:	0c f0       	brlt	.+2      	; 0x9ec <__LOCK_REGION_LENGTH__+0x5ec>
     9ea:	6d c0       	rjmp	.+218    	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     9ec:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <normalization+0x8>
     9f0:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <normalization+0x9>
     9f4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <normalization+0xa>
     9f8:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <normalization+0xb>
     9fc:	20 e0       	ldi	r18, 0x00	; 0
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	4c e5       	ldi	r20, 0x5C	; 92
     a02:	52 e4       	ldi	r21, 0x42	; 66
     a04:	c7 d1       	rcall	.+910    	; 0xd94 <__cmpsf2>
     a06:	88 23       	and	r24, r24
     a08:	0c f0       	brlt	.+2      	; 0xa0c <__LOCK_REGION_LENGTH__+0x60c>
     a0a:	5d c0       	rjmp	.+186    	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     a0c:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <normalization+0xc>
     a10:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <normalization+0xd>
     a14:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <normalization+0xe>
     a18:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <normalization+0xf>
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	4c e5       	ldi	r20, 0x5C	; 92
     a22:	52 e4       	ldi	r21, 0x42	; 66
     a24:	b7 d1       	rcall	.+878    	; 0xd94 <__cmpsf2>
     a26:	88 23       	and	r24, r24
     a28:	0c f0       	brlt	.+2      	; 0xa2c <__LOCK_REGION_LENGTH__+0x62c>
     a2a:	4d c0       	rjmp	.+154    	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     a2c:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <normalization+0x10>
     a30:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <normalization+0x11>
     a34:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <normalization+0x12>
     a38:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <normalization+0x13>
     a3c:	20 e0       	ldi	r18, 0x00	; 0
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	4c e5       	ldi	r20, 0x5C	; 92
     a42:	52 e4       	ldi	r21, 0x42	; 66
     a44:	a7 d1       	rcall	.+846    	; 0xd94 <__cmpsf2>
     a46:	88 23       	and	r24, r24
     a48:	0c f0       	brlt	.+2      	; 0xa4c <__LOCK_REGION_LENGTH__+0x64c>
     a4a:	3d c0       	rjmp	.+122    	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     a4c:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <normalization+0x14>
     a50:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <normalization+0x15>
     a54:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <normalization+0x16>
     a58:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <normalization+0x17>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	4c e5       	ldi	r20, 0x5C	; 92
     a62:	52 e4       	ldi	r21, 0x42	; 66
     a64:	97 d1       	rcall	.+814    	; 0xd94 <__cmpsf2>
     a66:	88 23       	and	r24, r24
     a68:	74 f5       	brge	.+92     	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     a6a:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <normalization+0x18>
     a6e:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <normalization+0x19>
     a72:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <normalization+0x1a>
     a76:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <normalization+0x1b>
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	4c e5       	ldi	r20, 0x5C	; 92
     a80:	52 e4       	ldi	r21, 0x42	; 66
     a82:	88 d1       	rcall	.+784    	; 0xd94 <__cmpsf2>
     a84:	88 23       	and	r24, r24
     a86:	fc f4       	brge	.+62     	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     a88:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <normalization+0x1c>
     a8c:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <normalization+0x1d>
     a90:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <normalization+0x1e>
     a94:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <normalization+0x1f>
     a98:	20 e0       	ldi	r18, 0x00	; 0
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	4c e5       	ldi	r20, 0x5C	; 92
     a9e:	52 e4       	ldi	r21, 0x42	; 66
     aa0:	79 d1       	rcall	.+754    	; 0xd94 <__cmpsf2>
     aa2:	88 23       	and	r24, r24
     aa4:	84 f4       	brge	.+32     	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     aa6:	81 e0       	ldi	r24, 0x01	; 1
		{
			line_dis=1;
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <line_dis+0x1>
     aae:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <line_dis>
			if(line_count==0)
     ab2:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <line_count>
     ab6:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <line_count+0x1>
     aba:	89 2b       	or	r24, r25
     abc:	21 f4       	brne	.+8      	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
			{
				cnt1=0;
     abe:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <cnt1+0x1>
     ac2:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <cnt1>
			}
			
		}
		
		if(line_dis==1&&normalization[0]>55&&normalization[1]>55&&normalization[2]>55&&normalization[5]>55&&normalization[6]>55&&normalization[7]>55)
     ac6:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <line_dis>
     aca:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <line_dis+0x1>
     ace:	01 97       	sbiw	r24, 0x01	; 1
     ad0:	09 f0       	breq	.+2      	; 0xad4 <__LOCK_REGION_LENGTH__+0x6d4>
     ad2:	6a c0       	rjmp	.+212    	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     ad4:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <normalization>
     ad8:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <normalization+0x1>
     adc:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <normalization+0x2>
     ae0:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <normalization+0x3>
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	4c e5       	ldi	r20, 0x5C	; 92
     aea:	52 e4       	ldi	r21, 0x42	; 66
     aec:	a2 d2       	rcall	.+1348   	; 0x1032 <__gesf2>
     aee:	18 16       	cp	r1, r24
     af0:	0c f0       	brlt	.+2      	; 0xaf4 <__LOCK_REGION_LENGTH__+0x6f4>
     af2:	5a c0       	rjmp	.+180    	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     af4:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <normalization+0x4>
     af8:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <normalization+0x5>
     afc:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <normalization+0x6>
     b00:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <normalization+0x7>
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	4c e5       	ldi	r20, 0x5C	; 92
     b0a:	52 e4       	ldi	r21, 0x42	; 66
     b0c:	92 d2       	rcall	.+1316   	; 0x1032 <__gesf2>
     b0e:	18 16       	cp	r1, r24
     b10:	0c f0       	brlt	.+2      	; 0xb14 <__LOCK_REGION_LENGTH__+0x714>
     b12:	4a c0       	rjmp	.+148    	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     b14:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <normalization+0x8>
     b18:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <normalization+0x9>
     b1c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <normalization+0xa>
     b20:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <normalization+0xb>
     b24:	20 e0       	ldi	r18, 0x00	; 0
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	4c e5       	ldi	r20, 0x5C	; 92
     b2a:	52 e4       	ldi	r21, 0x42	; 66
     b2c:	82 d2       	rcall	.+1284   	; 0x1032 <__gesf2>
     b2e:	18 16       	cp	r1, r24
     b30:	0c f0       	brlt	.+2      	; 0xb34 <__LOCK_REGION_LENGTH__+0x734>
     b32:	3a c0       	rjmp	.+116    	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     b34:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <normalization+0x14>
     b38:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <normalization+0x15>
     b3c:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <normalization+0x16>
     b40:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <normalization+0x17>
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	4c e5       	ldi	r20, 0x5C	; 92
     b4a:	52 e4       	ldi	r21, 0x42	; 66
     b4c:	72 d2       	rcall	.+1252   	; 0x1032 <__gesf2>
     b4e:	18 16       	cp	r1, r24
     b50:	5c f5       	brge	.+86     	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     b52:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <normalization+0x18>
     b56:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <normalization+0x19>
     b5a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <normalization+0x1a>
     b5e:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <normalization+0x1b>
     b62:	20 e0       	ldi	r18, 0x00	; 0
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	4c e5       	ldi	r20, 0x5C	; 92
     b68:	52 e4       	ldi	r21, 0x42	; 66
     b6a:	63 d2       	rcall	.+1222   	; 0x1032 <__gesf2>
     b6c:	18 16       	cp	r1, r24
     b6e:	e4 f4       	brge	.+56     	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     b70:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <normalization+0x1c>
     b74:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <normalization+0x1d>
     b78:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <normalization+0x1e>
     b7c:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <normalization+0x1f>
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	4c e5       	ldi	r20, 0x5C	; 92
     b86:	52 e4       	ldi	r21, 0x42	; 66
     b88:	54 d2       	rcall	.+1192   	; 0x1032 <__gesf2>
     b8a:	18 16       	cp	r1, r24
     b8c:	6c f4       	brge	.+26     	; 0xba8 <__LOCK_REGION_LENGTH__+0x7a8>
     b8e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <line_count>
		{
			line_count++;
     b92:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <line_count+0x1>
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <line_count+0x1>
     b9c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <line_count>
     ba0:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <line_dis+0x1>
			line_dis=0;
     ba4:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <line_dis>
     ba8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <cnt1>
		}
		
		if(cnt1==200)
     bac:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <cnt1+0x1>
     bb0:	88 3c       	cpi	r24, 0xC8	; 200
     bb2:	91 05       	cpc	r25, r1
     bb4:	41 f4       	brne	.+16     	; 0xbc6 <__LOCK_REGION_LENGTH__+0x7c6>
     bb6:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <line_count+0x1>
		{
			line_count=0;
     bba:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <line_count>
     bbe:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <cnt1+0x1>
			cnt1=0;
     bc2:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <cnt1>
     bc6:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <cnt1>
		}
		cnt1++;
     bca:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <cnt1+0x1>
     bce:	01 96       	adiw	r24, 0x01	; 1
     bd0:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <cnt1+0x1>
     bd4:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <cnt1>
     bd8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <line_count>
		
		
		
		if(line_count==1&&stop==1)
     bdc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <line_count+0x1>
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	09 f0       	breq	.+2      	; 0xbe6 <__LOCK_REGION_LENGTH__+0x7e6>
     be4:	4a c0       	rjmp	.+148    	; 0xc7a <__LOCK_REGION_LENGTH__+0x87a>
     be6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
     bea:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
     bee:	01 97       	sbiw	r24, 0x01	; 1
     bf0:	09 f0       	breq	.+2      	; 0xbf4 <__LOCK_REGION_LENGTH__+0x7f4>
     bf2:	43 c0       	rjmp	.+134    	; 0xc7a <__LOCK_REGION_LENGTH__+0x87a>
     bf4:	82 e0       	ldi	r24, 0x02	; 2
		{
			g_mod=2;
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <g_mod+0x1>
     bfc:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <g_mod>
     c00:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <cnt+0x1>
			cnt=0;
     c04:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <cnt>
     c08:	38 c0       	rjmp	.+112    	; 0xc7a <__LOCK_REGION_LENGTH__+0x87a>
     c0a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <g_mod>
		}
		
	}
	else if(g_mod==2){
     c0e:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <g_mod+0x1>
     c12:	02 97       	sbiw	r24, 0x02	; 2
     c14:	91 f5       	brne	.+100    	; 0xc7a <__LOCK_REGION_LENGTH__+0x87a>
     c16:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <line_count+0x1>
		line_count=0;
     c1a:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <line_count>
     c1e:	89 e0       	ldi	r24, 0x09	; 9
		PORTE=0x09;
     c20:	83 b9       	out	0x03, r24	; 3
     c22:	8c eb       	ldi	r24, 0xBC	; 188
		OCR1A=700;
     c24:	92 e0       	ldi	r25, 0x02	; 2
     c26:	9b bd       	out	0x2b, r25	; 43
     c28:	8a bd       	out	0x2a, r24	; 42
     c2a:	99 bd       	out	0x29, r25	; 41
		OCR1B=700;
     c2c:	88 bd       	out	0x28, r24	; 40
     c2e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <cnt>
		if(cnt==130) 
     c32:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <cnt+0x1>
     c36:	82 38       	cpi	r24, 0x82	; 130
     c38:	91 05       	cpc	r25, r1
     c3a:	c9 f4       	brne	.+50     	; 0xc6e <__LOCK_REGION_LENGTH__+0x86e>
     c3c:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <normalization+0x1c>
		{
			if(normalization[7]>55)
     c40:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <normalization+0x1d>
     c44:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <normalization+0x1e>
     c48:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <normalization+0x1f>
     c4c:	20 e0       	ldi	r18, 0x00	; 0
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	4c e5       	ldi	r20, 0x5C	; 92
     c52:	52 e4       	ldi	r21, 0x42	; 66
     c54:	ee d1       	rcall	.+988    	; 0x1032 <__gesf2>
     c56:	18 16       	cp	r1, r24
     c58:	54 f4       	brge	.+20     	; 0xc6e <__LOCK_REGION_LENGTH__+0x86e>
     c5a:	81 e0       	ldi	r24, 0x01	; 1
     c5c:	90 e0       	ldi	r25, 0x00	; 0
			{
				g_mod=1;
     c5e:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <g_mod+0x1>
     c62:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <g_mod>
     c66:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <__data_end+0x1>
				stop=0;
     c6a:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__data_end>
     c6e:	81 e0       	ldi	r24, 0x01	; 1
     c70:	90 e0       	ldi	r25, 0x00	; 0
			}
		}
		mod=1;
     c72:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <mod+0x1>
     c76:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <mod>
     c7a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <cnt>
	}
	cnt++;
     c7e:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <cnt+0x1>
     c82:	01 96       	adiw	r24, 0x01	; 1
     c84:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <cnt+0x1>
     c88:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <cnt>
     c8c:	ff 91       	pop	r31
     c8e:	ef 91       	pop	r30
}
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	bf 91       	pop	r27
     c96:	af 91       	pop	r26
     c98:	9f 91       	pop	r25
     c9a:	8f 91       	pop	r24
     c9c:	7f 91       	pop	r23
     c9e:	6f 91       	pop	r22
     ca0:	5f 91       	pop	r21
     ca2:	4f 91       	pop	r20
     ca4:	3f 91       	pop	r19
     ca6:	2f 91       	pop	r18
     ca8:	1f 91       	pop	r17
     caa:	0f 91       	pop	r16
     cac:	ff 90       	pop	r15
     cae:	ef 90       	pop	r14
     cb0:	df 90       	pop	r13
     cb2:	cf 90       	pop	r12
     cb4:	bf 90       	pop	r11
     cb6:	af 90       	pop	r10
     cb8:	9f 90       	pop	r9
     cba:	8f 90       	pop	r8
     cbc:	0f 90       	pop	r0
     cbe:	0b be       	out	0x3b, r0	; 59
     cc0:	0f 90       	pop	r0
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	0f 90       	pop	r0
     cc6:	1f 90       	pop	r1
     cc8:	18 95       	reti

00000cca <__subsf3>:
     cca:	50 58       	subi	r21, 0x80	; 128

00000ccc <__addsf3>:
     ccc:	bb 27       	eor	r27, r27
     cce:	aa 27       	eor	r26, r26
     cd0:	0e d0       	rcall	.+28     	; 0xcee <__addsf3x>
     cd2:	75 c1       	rjmp	.+746    	; 0xfbe <__fp_round>
     cd4:	66 d1       	rcall	.+716    	; 0xfa2 <__fp_pscA>
     cd6:	30 f0       	brcs	.+12     	; 0xce4 <__addsf3+0x18>
     cd8:	6b d1       	rcall	.+726    	; 0xfb0 <__fp_pscB>
     cda:	20 f0       	brcs	.+8      	; 0xce4 <__addsf3+0x18>
     cdc:	31 f4       	brne	.+12     	; 0xcea <__addsf3+0x1e>
     cde:	9f 3f       	cpi	r25, 0xFF	; 255
     ce0:	11 f4       	brne	.+4      	; 0xce6 <__addsf3+0x1a>
     ce2:	1e f4       	brtc	.+6      	; 0xcea <__addsf3+0x1e>
     ce4:	5b c1       	rjmp	.+694    	; 0xf9c <__fp_nan>
     ce6:	0e f4       	brtc	.+2      	; 0xcea <__addsf3+0x1e>
     ce8:	e0 95       	com	r30
     cea:	e7 fb       	bst	r30, 7
     cec:	51 c1       	rjmp	.+674    	; 0xf90 <__fp_inf>

00000cee <__addsf3x>:
     cee:	e9 2f       	mov	r30, r25
     cf0:	77 d1       	rcall	.+750    	; 0xfe0 <__fp_split3>
     cf2:	80 f3       	brcs	.-32     	; 0xcd4 <__addsf3+0x8>
     cf4:	ba 17       	cp	r27, r26
     cf6:	62 07       	cpc	r22, r18
     cf8:	73 07       	cpc	r23, r19
     cfa:	84 07       	cpc	r24, r20
     cfc:	95 07       	cpc	r25, r21
     cfe:	18 f0       	brcs	.+6      	; 0xd06 <__addsf3x+0x18>
     d00:	71 f4       	brne	.+28     	; 0xd1e <__addsf3x+0x30>
     d02:	9e f5       	brtc	.+102    	; 0xd6a <__addsf3x+0x7c>
     d04:	8f c1       	rjmp	.+798    	; 0x1024 <__fp_zero>
     d06:	0e f4       	brtc	.+2      	; 0xd0a <__addsf3x+0x1c>
     d08:	e0 95       	com	r30
     d0a:	0b 2e       	mov	r0, r27
     d0c:	ba 2f       	mov	r27, r26
     d0e:	a0 2d       	mov	r26, r0
     d10:	0b 01       	movw	r0, r22
     d12:	b9 01       	movw	r22, r18
     d14:	90 01       	movw	r18, r0
     d16:	0c 01       	movw	r0, r24
     d18:	ca 01       	movw	r24, r20
     d1a:	a0 01       	movw	r20, r0
     d1c:	11 24       	eor	r1, r1
     d1e:	ff 27       	eor	r31, r31
     d20:	59 1b       	sub	r21, r25
     d22:	99 f0       	breq	.+38     	; 0xd4a <__addsf3x+0x5c>
     d24:	59 3f       	cpi	r21, 0xF9	; 249
     d26:	50 f4       	brcc	.+20     	; 0xd3c <__addsf3x+0x4e>
     d28:	50 3e       	cpi	r21, 0xE0	; 224
     d2a:	68 f1       	brcs	.+90     	; 0xd86 <__addsf3x+0x98>
     d2c:	1a 16       	cp	r1, r26
     d2e:	f0 40       	sbci	r31, 0x00	; 0
     d30:	a2 2f       	mov	r26, r18
     d32:	23 2f       	mov	r18, r19
     d34:	34 2f       	mov	r19, r20
     d36:	44 27       	eor	r20, r20
     d38:	58 5f       	subi	r21, 0xF8	; 248
     d3a:	f3 cf       	rjmp	.-26     	; 0xd22 <__addsf3x+0x34>
     d3c:	46 95       	lsr	r20
     d3e:	37 95       	ror	r19
     d40:	27 95       	ror	r18
     d42:	a7 95       	ror	r26
     d44:	f0 40       	sbci	r31, 0x00	; 0
     d46:	53 95       	inc	r21
     d48:	c9 f7       	brne	.-14     	; 0xd3c <__addsf3x+0x4e>
     d4a:	7e f4       	brtc	.+30     	; 0xd6a <__addsf3x+0x7c>
     d4c:	1f 16       	cp	r1, r31
     d4e:	ba 0b       	sbc	r27, r26
     d50:	62 0b       	sbc	r22, r18
     d52:	73 0b       	sbc	r23, r19
     d54:	84 0b       	sbc	r24, r20
     d56:	ba f0       	brmi	.+46     	; 0xd86 <__addsf3x+0x98>
     d58:	91 50       	subi	r25, 0x01	; 1
     d5a:	a1 f0       	breq	.+40     	; 0xd84 <__addsf3x+0x96>
     d5c:	ff 0f       	add	r31, r31
     d5e:	bb 1f       	adc	r27, r27
     d60:	66 1f       	adc	r22, r22
     d62:	77 1f       	adc	r23, r23
     d64:	88 1f       	adc	r24, r24
     d66:	c2 f7       	brpl	.-16     	; 0xd58 <__addsf3x+0x6a>
     d68:	0e c0       	rjmp	.+28     	; 0xd86 <__addsf3x+0x98>
     d6a:	ba 0f       	add	r27, r26
     d6c:	62 1f       	adc	r22, r18
     d6e:	73 1f       	adc	r23, r19
     d70:	84 1f       	adc	r24, r20
     d72:	48 f4       	brcc	.+18     	; 0xd86 <__addsf3x+0x98>
     d74:	87 95       	ror	r24
     d76:	77 95       	ror	r23
     d78:	67 95       	ror	r22
     d7a:	b7 95       	ror	r27
     d7c:	f7 95       	ror	r31
     d7e:	9e 3f       	cpi	r25, 0xFE	; 254
     d80:	08 f0       	brcs	.+2      	; 0xd84 <__addsf3x+0x96>
     d82:	b3 cf       	rjmp	.-154    	; 0xcea <__addsf3+0x1e>
     d84:	93 95       	inc	r25
     d86:	88 0f       	add	r24, r24
     d88:	08 f0       	brcs	.+2      	; 0xd8c <__addsf3x+0x9e>
     d8a:	99 27       	eor	r25, r25
     d8c:	ee 0f       	add	r30, r30
     d8e:	97 95       	ror	r25
     d90:	87 95       	ror	r24
     d92:	08 95       	ret

00000d94 <__cmpsf2>:
     d94:	d9 d0       	rcall	.+434    	; 0xf48 <__fp_cmp>
     d96:	08 f4       	brcc	.+2      	; 0xd9a <__cmpsf2+0x6>
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	08 95       	ret

00000d9c <__divsf3>:
     d9c:	0c d0       	rcall	.+24     	; 0xdb6 <__divsf3x>
     d9e:	0f c1       	rjmp	.+542    	; 0xfbe <__fp_round>
     da0:	07 d1       	rcall	.+526    	; 0xfb0 <__fp_pscB>
     da2:	40 f0       	brcs	.+16     	; 0xdb4 <__divsf3+0x18>
     da4:	fe d0       	rcall	.+508    	; 0xfa2 <__fp_pscA>
     da6:	30 f0       	brcs	.+12     	; 0xdb4 <__divsf3+0x18>
     da8:	21 f4       	brne	.+8      	; 0xdb2 <__divsf3+0x16>
     daa:	5f 3f       	cpi	r21, 0xFF	; 255
     dac:	19 f0       	breq	.+6      	; 0xdb4 <__divsf3+0x18>
     dae:	f0 c0       	rjmp	.+480    	; 0xf90 <__fp_inf>
     db0:	51 11       	cpse	r21, r1
     db2:	39 c1       	rjmp	.+626    	; 0x1026 <__fp_szero>
     db4:	f3 c0       	rjmp	.+486    	; 0xf9c <__fp_nan>

00000db6 <__divsf3x>:
     db6:	14 d1       	rcall	.+552    	; 0xfe0 <__fp_split3>
     db8:	98 f3       	brcs	.-26     	; 0xda0 <__divsf3+0x4>

00000dba <__divsf3_pse>:
     dba:	99 23       	and	r25, r25
     dbc:	c9 f3       	breq	.-14     	; 0xdb0 <__divsf3+0x14>
     dbe:	55 23       	and	r21, r21
     dc0:	b1 f3       	breq	.-20     	; 0xdae <__divsf3+0x12>
     dc2:	95 1b       	sub	r25, r21
     dc4:	55 0b       	sbc	r21, r21
     dc6:	bb 27       	eor	r27, r27
     dc8:	aa 27       	eor	r26, r26
     dca:	62 17       	cp	r22, r18
     dcc:	73 07       	cpc	r23, r19
     dce:	84 07       	cpc	r24, r20
     dd0:	38 f0       	brcs	.+14     	; 0xde0 <__divsf3_pse+0x26>
     dd2:	9f 5f       	subi	r25, 0xFF	; 255
     dd4:	5f 4f       	sbci	r21, 0xFF	; 255
     dd6:	22 0f       	add	r18, r18
     dd8:	33 1f       	adc	r19, r19
     dda:	44 1f       	adc	r20, r20
     ddc:	aa 1f       	adc	r26, r26
     dde:	a9 f3       	breq	.-22     	; 0xdca <__divsf3_pse+0x10>
     de0:	33 d0       	rcall	.+102    	; 0xe48 <__divsf3_pse+0x8e>
     de2:	0e 2e       	mov	r0, r30
     de4:	3a f0       	brmi	.+14     	; 0xdf4 <__divsf3_pse+0x3a>
     de6:	e0 e8       	ldi	r30, 0x80	; 128
     de8:	30 d0       	rcall	.+96     	; 0xe4a <__divsf3_pse+0x90>
     dea:	91 50       	subi	r25, 0x01	; 1
     dec:	50 40       	sbci	r21, 0x00	; 0
     dee:	e6 95       	lsr	r30
     df0:	00 1c       	adc	r0, r0
     df2:	ca f7       	brpl	.-14     	; 0xde6 <__divsf3_pse+0x2c>
     df4:	29 d0       	rcall	.+82     	; 0xe48 <__divsf3_pse+0x8e>
     df6:	fe 2f       	mov	r31, r30
     df8:	27 d0       	rcall	.+78     	; 0xe48 <__divsf3_pse+0x8e>
     dfa:	66 0f       	add	r22, r22
     dfc:	77 1f       	adc	r23, r23
     dfe:	88 1f       	adc	r24, r24
     e00:	bb 1f       	adc	r27, r27
     e02:	26 17       	cp	r18, r22
     e04:	37 07       	cpc	r19, r23
     e06:	48 07       	cpc	r20, r24
     e08:	ab 07       	cpc	r26, r27
     e0a:	b0 e8       	ldi	r27, 0x80	; 128
     e0c:	09 f0       	breq	.+2      	; 0xe10 <__divsf3_pse+0x56>
     e0e:	bb 0b       	sbc	r27, r27
     e10:	80 2d       	mov	r24, r0
     e12:	bf 01       	movw	r22, r30
     e14:	ff 27       	eor	r31, r31
     e16:	93 58       	subi	r25, 0x83	; 131
     e18:	5f 4f       	sbci	r21, 0xFF	; 255
     e1a:	2a f0       	brmi	.+10     	; 0xe26 <__divsf3_pse+0x6c>
     e1c:	9e 3f       	cpi	r25, 0xFE	; 254
     e1e:	51 05       	cpc	r21, r1
     e20:	68 f0       	brcs	.+26     	; 0xe3c <__divsf3_pse+0x82>
     e22:	b6 c0       	rjmp	.+364    	; 0xf90 <__fp_inf>
     e24:	00 c1       	rjmp	.+512    	; 0x1026 <__fp_szero>
     e26:	5f 3f       	cpi	r21, 0xFF	; 255
     e28:	ec f3       	brlt	.-6      	; 0xe24 <__divsf3_pse+0x6a>
     e2a:	98 3e       	cpi	r25, 0xE8	; 232
     e2c:	dc f3       	brlt	.-10     	; 0xe24 <__divsf3_pse+0x6a>
     e2e:	86 95       	lsr	r24
     e30:	77 95       	ror	r23
     e32:	67 95       	ror	r22
     e34:	b7 95       	ror	r27
     e36:	f7 95       	ror	r31
     e38:	9f 5f       	subi	r25, 0xFF	; 255
     e3a:	c9 f7       	brne	.-14     	; 0xe2e <__divsf3_pse+0x74>
     e3c:	88 0f       	add	r24, r24
     e3e:	91 1d       	adc	r25, r1
     e40:	96 95       	lsr	r25
     e42:	87 95       	ror	r24
     e44:	97 f9       	bld	r25, 7
     e46:	08 95       	ret
     e48:	e1 e0       	ldi	r30, 0x01	; 1
     e4a:	66 0f       	add	r22, r22
     e4c:	77 1f       	adc	r23, r23
     e4e:	88 1f       	adc	r24, r24
     e50:	bb 1f       	adc	r27, r27
     e52:	62 17       	cp	r22, r18
     e54:	73 07       	cpc	r23, r19
     e56:	84 07       	cpc	r24, r20
     e58:	ba 07       	cpc	r27, r26
     e5a:	20 f0       	brcs	.+8      	; 0xe64 <__divsf3_pse+0xaa>
     e5c:	62 1b       	sub	r22, r18
     e5e:	73 0b       	sbc	r23, r19
     e60:	84 0b       	sbc	r24, r20
     e62:	ba 0b       	sbc	r27, r26
     e64:	ee 1f       	adc	r30, r30
     e66:	88 f7       	brcc	.-30     	; 0xe4a <__divsf3_pse+0x90>
     e68:	e0 95       	com	r30
     e6a:	08 95       	ret

00000e6c <__fixsfsi>:
     e6c:	04 d0       	rcall	.+8      	; 0xe76 <__fixunssfsi>
     e6e:	68 94       	set
     e70:	b1 11       	cpse	r27, r1
     e72:	d9 c0       	rjmp	.+434    	; 0x1026 <__fp_szero>
     e74:	08 95       	ret

00000e76 <__fixunssfsi>:
     e76:	bc d0       	rcall	.+376    	; 0xff0 <__fp_splitA>
     e78:	88 f0       	brcs	.+34     	; 0xe9c <__fixunssfsi+0x26>
     e7a:	9f 57       	subi	r25, 0x7F	; 127
     e7c:	90 f0       	brcs	.+36     	; 0xea2 <__fixunssfsi+0x2c>
     e7e:	b9 2f       	mov	r27, r25
     e80:	99 27       	eor	r25, r25
     e82:	b7 51       	subi	r27, 0x17	; 23
     e84:	a0 f0       	brcs	.+40     	; 0xeae <__fixunssfsi+0x38>
     e86:	d1 f0       	breq	.+52     	; 0xebc <__fixunssfsi+0x46>
     e88:	66 0f       	add	r22, r22
     e8a:	77 1f       	adc	r23, r23
     e8c:	88 1f       	adc	r24, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	1a f0       	brmi	.+6      	; 0xe98 <__fixunssfsi+0x22>
     e92:	ba 95       	dec	r27
     e94:	c9 f7       	brne	.-14     	; 0xe88 <__fixunssfsi+0x12>
     e96:	12 c0       	rjmp	.+36     	; 0xebc <__fixunssfsi+0x46>
     e98:	b1 30       	cpi	r27, 0x01	; 1
     e9a:	81 f0       	breq	.+32     	; 0xebc <__fixunssfsi+0x46>
     e9c:	c3 d0       	rcall	.+390    	; 0x1024 <__fp_zero>
     e9e:	b1 e0       	ldi	r27, 0x01	; 1
     ea0:	08 95       	ret
     ea2:	c0 c0       	rjmp	.+384    	; 0x1024 <__fp_zero>
     ea4:	67 2f       	mov	r22, r23
     ea6:	78 2f       	mov	r23, r24
     ea8:	88 27       	eor	r24, r24
     eaa:	b8 5f       	subi	r27, 0xF8	; 248
     eac:	39 f0       	breq	.+14     	; 0xebc <__fixunssfsi+0x46>
     eae:	b9 3f       	cpi	r27, 0xF9	; 249
     eb0:	cc f3       	brlt	.-14     	; 0xea4 <__fixunssfsi+0x2e>
     eb2:	86 95       	lsr	r24
     eb4:	77 95       	ror	r23
     eb6:	67 95       	ror	r22
     eb8:	b3 95       	inc	r27
     eba:	d9 f7       	brne	.-10     	; 0xeb2 <__fixunssfsi+0x3c>
     ebc:	3e f4       	brtc	.+14     	; 0xecc <__fixunssfsi+0x56>
     ebe:	90 95       	com	r25
     ec0:	80 95       	com	r24
     ec2:	70 95       	com	r23
     ec4:	61 95       	neg	r22
     ec6:	7f 4f       	sbci	r23, 0xFF	; 255
     ec8:	8f 4f       	sbci	r24, 0xFF	; 255
     eca:	9f 4f       	sbci	r25, 0xFF	; 255
     ecc:	08 95       	ret

00000ece <__floatunsisf>:
     ece:	e8 94       	clt
     ed0:	09 c0       	rjmp	.+18     	; 0xee4 <__floatsisf+0x12>

00000ed2 <__floatsisf>:
     ed2:	97 fb       	bst	r25, 7
     ed4:	3e f4       	brtc	.+14     	; 0xee4 <__floatsisf+0x12>
     ed6:	90 95       	com	r25
     ed8:	80 95       	com	r24
     eda:	70 95       	com	r23
     edc:	61 95       	neg	r22
     ede:	7f 4f       	sbci	r23, 0xFF	; 255
     ee0:	8f 4f       	sbci	r24, 0xFF	; 255
     ee2:	9f 4f       	sbci	r25, 0xFF	; 255
     ee4:	99 23       	and	r25, r25
     ee6:	a9 f0       	breq	.+42     	; 0xf12 <__floatsisf+0x40>
     ee8:	f9 2f       	mov	r31, r25
     eea:	96 e9       	ldi	r25, 0x96	; 150
     eec:	bb 27       	eor	r27, r27
     eee:	93 95       	inc	r25
     ef0:	f6 95       	lsr	r31
     ef2:	87 95       	ror	r24
     ef4:	77 95       	ror	r23
     ef6:	67 95       	ror	r22
     ef8:	b7 95       	ror	r27
     efa:	f1 11       	cpse	r31, r1
     efc:	f8 cf       	rjmp	.-16     	; 0xeee <__floatsisf+0x1c>
     efe:	fa f4       	brpl	.+62     	; 0xf3e <__floatsisf+0x6c>
     f00:	bb 0f       	add	r27, r27
     f02:	11 f4       	brne	.+4      	; 0xf08 <__floatsisf+0x36>
     f04:	60 ff       	sbrs	r22, 0
     f06:	1b c0       	rjmp	.+54     	; 0xf3e <__floatsisf+0x6c>
     f08:	6f 5f       	subi	r22, 0xFF	; 255
     f0a:	7f 4f       	sbci	r23, 0xFF	; 255
     f0c:	8f 4f       	sbci	r24, 0xFF	; 255
     f0e:	9f 4f       	sbci	r25, 0xFF	; 255
     f10:	16 c0       	rjmp	.+44     	; 0xf3e <__floatsisf+0x6c>
     f12:	88 23       	and	r24, r24
     f14:	11 f0       	breq	.+4      	; 0xf1a <__floatsisf+0x48>
     f16:	96 e9       	ldi	r25, 0x96	; 150
     f18:	11 c0       	rjmp	.+34     	; 0xf3c <__floatsisf+0x6a>
     f1a:	77 23       	and	r23, r23
     f1c:	21 f0       	breq	.+8      	; 0xf26 <__floatsisf+0x54>
     f1e:	9e e8       	ldi	r25, 0x8E	; 142
     f20:	87 2f       	mov	r24, r23
     f22:	76 2f       	mov	r23, r22
     f24:	05 c0       	rjmp	.+10     	; 0xf30 <__floatsisf+0x5e>
     f26:	66 23       	and	r22, r22
     f28:	71 f0       	breq	.+28     	; 0xf46 <__floatsisf+0x74>
     f2a:	96 e8       	ldi	r25, 0x86	; 134
     f2c:	86 2f       	mov	r24, r22
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	2a f0       	brmi	.+10     	; 0xf3e <__floatsisf+0x6c>
     f34:	9a 95       	dec	r25
     f36:	66 0f       	add	r22, r22
     f38:	77 1f       	adc	r23, r23
     f3a:	88 1f       	adc	r24, r24
     f3c:	da f7       	brpl	.-10     	; 0xf34 <__floatsisf+0x62>
     f3e:	88 0f       	add	r24, r24
     f40:	96 95       	lsr	r25
     f42:	87 95       	ror	r24
     f44:	97 f9       	bld	r25, 7
     f46:	08 95       	ret

00000f48 <__fp_cmp>:
     f48:	99 0f       	add	r25, r25
     f4a:	00 08       	sbc	r0, r0
     f4c:	55 0f       	add	r21, r21
     f4e:	aa 0b       	sbc	r26, r26
     f50:	e0 e8       	ldi	r30, 0x80	; 128
     f52:	fe ef       	ldi	r31, 0xFE	; 254
     f54:	16 16       	cp	r1, r22
     f56:	17 06       	cpc	r1, r23
     f58:	e8 07       	cpc	r30, r24
     f5a:	f9 07       	cpc	r31, r25
     f5c:	c0 f0       	brcs	.+48     	; 0xf8e <__fp_cmp+0x46>
     f5e:	12 16       	cp	r1, r18
     f60:	13 06       	cpc	r1, r19
     f62:	e4 07       	cpc	r30, r20
     f64:	f5 07       	cpc	r31, r21
     f66:	98 f0       	brcs	.+38     	; 0xf8e <__fp_cmp+0x46>
     f68:	62 1b       	sub	r22, r18
     f6a:	73 0b       	sbc	r23, r19
     f6c:	84 0b       	sbc	r24, r20
     f6e:	95 0b       	sbc	r25, r21
     f70:	39 f4       	brne	.+14     	; 0xf80 <__fp_cmp+0x38>
     f72:	0a 26       	eor	r0, r26
     f74:	61 f0       	breq	.+24     	; 0xf8e <__fp_cmp+0x46>
     f76:	23 2b       	or	r18, r19
     f78:	24 2b       	or	r18, r20
     f7a:	25 2b       	or	r18, r21
     f7c:	21 f4       	brne	.+8      	; 0xf86 <__fp_cmp+0x3e>
     f7e:	08 95       	ret
     f80:	0a 26       	eor	r0, r26
     f82:	09 f4       	brne	.+2      	; 0xf86 <__fp_cmp+0x3e>
     f84:	a1 40       	sbci	r26, 0x01	; 1
     f86:	a6 95       	lsr	r26
     f88:	8f ef       	ldi	r24, 0xFF	; 255
     f8a:	81 1d       	adc	r24, r1
     f8c:	81 1d       	adc	r24, r1
     f8e:	08 95       	ret

00000f90 <__fp_inf>:
     f90:	97 f9       	bld	r25, 7
     f92:	9f 67       	ori	r25, 0x7F	; 127
     f94:	80 e8       	ldi	r24, 0x80	; 128
     f96:	70 e0       	ldi	r23, 0x00	; 0
     f98:	60 e0       	ldi	r22, 0x00	; 0
     f9a:	08 95       	ret

00000f9c <__fp_nan>:
     f9c:	9f ef       	ldi	r25, 0xFF	; 255
     f9e:	80 ec       	ldi	r24, 0xC0	; 192
     fa0:	08 95       	ret

00000fa2 <__fp_pscA>:
     fa2:	00 24       	eor	r0, r0
     fa4:	0a 94       	dec	r0
     fa6:	16 16       	cp	r1, r22
     fa8:	17 06       	cpc	r1, r23
     faa:	18 06       	cpc	r1, r24
     fac:	09 06       	cpc	r0, r25
     fae:	08 95       	ret

00000fb0 <__fp_pscB>:
     fb0:	00 24       	eor	r0, r0
     fb2:	0a 94       	dec	r0
     fb4:	12 16       	cp	r1, r18
     fb6:	13 06       	cpc	r1, r19
     fb8:	14 06       	cpc	r1, r20
     fba:	05 06       	cpc	r0, r21
     fbc:	08 95       	ret

00000fbe <__fp_round>:
     fbe:	09 2e       	mov	r0, r25
     fc0:	03 94       	inc	r0
     fc2:	00 0c       	add	r0, r0
     fc4:	11 f4       	brne	.+4      	; 0xfca <__fp_round+0xc>
     fc6:	88 23       	and	r24, r24
     fc8:	52 f0       	brmi	.+20     	; 0xfde <__fp_round+0x20>
     fca:	bb 0f       	add	r27, r27
     fcc:	40 f4       	brcc	.+16     	; 0xfde <__fp_round+0x20>
     fce:	bf 2b       	or	r27, r31
     fd0:	11 f4       	brne	.+4      	; 0xfd6 <__fp_round+0x18>
     fd2:	60 ff       	sbrs	r22, 0
     fd4:	04 c0       	rjmp	.+8      	; 0xfde <__fp_round+0x20>
     fd6:	6f 5f       	subi	r22, 0xFF	; 255
     fd8:	7f 4f       	sbci	r23, 0xFF	; 255
     fda:	8f 4f       	sbci	r24, 0xFF	; 255
     fdc:	9f 4f       	sbci	r25, 0xFF	; 255
     fde:	08 95       	ret

00000fe0 <__fp_split3>:
     fe0:	57 fd       	sbrc	r21, 7
     fe2:	90 58       	subi	r25, 0x80	; 128
     fe4:	44 0f       	add	r20, r20
     fe6:	55 1f       	adc	r21, r21
     fe8:	59 f0       	breq	.+22     	; 0x1000 <__fp_splitA+0x10>
     fea:	5f 3f       	cpi	r21, 0xFF	; 255
     fec:	71 f0       	breq	.+28     	; 0x100a <__fp_splitA+0x1a>
     fee:	47 95       	ror	r20

00000ff0 <__fp_splitA>:
     ff0:	88 0f       	add	r24, r24
     ff2:	97 fb       	bst	r25, 7
     ff4:	99 1f       	adc	r25, r25
     ff6:	61 f0       	breq	.+24     	; 0x1010 <__fp_splitA+0x20>
     ff8:	9f 3f       	cpi	r25, 0xFF	; 255
     ffa:	79 f0       	breq	.+30     	; 0x101a <__fp_splitA+0x2a>
     ffc:	87 95       	ror	r24
     ffe:	08 95       	ret
    1000:	12 16       	cp	r1, r18
    1002:	13 06       	cpc	r1, r19
    1004:	14 06       	cpc	r1, r20
    1006:	55 1f       	adc	r21, r21
    1008:	f2 cf       	rjmp	.-28     	; 0xfee <__fp_split3+0xe>
    100a:	46 95       	lsr	r20
    100c:	f1 df       	rcall	.-30     	; 0xff0 <__fp_splitA>
    100e:	08 c0       	rjmp	.+16     	; 0x1020 <__fp_splitA+0x30>
    1010:	16 16       	cp	r1, r22
    1012:	17 06       	cpc	r1, r23
    1014:	18 06       	cpc	r1, r24
    1016:	99 1f       	adc	r25, r25
    1018:	f1 cf       	rjmp	.-30     	; 0xffc <__fp_splitA+0xc>
    101a:	86 95       	lsr	r24
    101c:	71 05       	cpc	r23, r1
    101e:	61 05       	cpc	r22, r1
    1020:	08 94       	sec
    1022:	08 95       	ret

00001024 <__fp_zero>:
    1024:	e8 94       	clt

00001026 <__fp_szero>:
    1026:	bb 27       	eor	r27, r27
    1028:	66 27       	eor	r22, r22
    102a:	77 27       	eor	r23, r23
    102c:	cb 01       	movw	r24, r22
    102e:	97 f9       	bld	r25, 7
    1030:	08 95       	ret

00001032 <__gesf2>:
    1032:	8a df       	rcall	.-236    	; 0xf48 <__fp_cmp>
    1034:	08 f4       	brcc	.+2      	; 0x1038 <__gesf2+0x6>
    1036:	8f ef       	ldi	r24, 0xFF	; 255
    1038:	08 95       	ret

0000103a <__mulsf3>:
    103a:	0b d0       	rcall	.+22     	; 0x1052 <__mulsf3x>
    103c:	c0 cf       	rjmp	.-128    	; 0xfbe <__fp_round>
    103e:	b1 df       	rcall	.-158    	; 0xfa2 <__fp_pscA>
    1040:	28 f0       	brcs	.+10     	; 0x104c <__mulsf3+0x12>
    1042:	b6 df       	rcall	.-148    	; 0xfb0 <__fp_pscB>
    1044:	18 f0       	brcs	.+6      	; 0x104c <__mulsf3+0x12>
    1046:	95 23       	and	r25, r21
    1048:	09 f0       	breq	.+2      	; 0x104c <__mulsf3+0x12>
    104a:	a2 cf       	rjmp	.-188    	; 0xf90 <__fp_inf>
    104c:	a7 cf       	rjmp	.-178    	; 0xf9c <__fp_nan>
    104e:	11 24       	eor	r1, r1
    1050:	ea cf       	rjmp	.-44     	; 0x1026 <__fp_szero>

00001052 <__mulsf3x>:
    1052:	c6 df       	rcall	.-116    	; 0xfe0 <__fp_split3>
    1054:	a0 f3       	brcs	.-24     	; 0x103e <__mulsf3+0x4>

00001056 <__mulsf3_pse>:
    1056:	95 9f       	mul	r25, r21
    1058:	d1 f3       	breq	.-12     	; 0x104e <__mulsf3+0x14>
    105a:	95 0f       	add	r25, r21
    105c:	50 e0       	ldi	r21, 0x00	; 0
    105e:	55 1f       	adc	r21, r21
    1060:	62 9f       	mul	r22, r18
    1062:	f0 01       	movw	r30, r0
    1064:	72 9f       	mul	r23, r18
    1066:	bb 27       	eor	r27, r27
    1068:	f0 0d       	add	r31, r0
    106a:	b1 1d       	adc	r27, r1
    106c:	63 9f       	mul	r22, r19
    106e:	aa 27       	eor	r26, r26
    1070:	f0 0d       	add	r31, r0
    1072:	b1 1d       	adc	r27, r1
    1074:	aa 1f       	adc	r26, r26
    1076:	64 9f       	mul	r22, r20
    1078:	66 27       	eor	r22, r22
    107a:	b0 0d       	add	r27, r0
    107c:	a1 1d       	adc	r26, r1
    107e:	66 1f       	adc	r22, r22
    1080:	82 9f       	mul	r24, r18
    1082:	22 27       	eor	r18, r18
    1084:	b0 0d       	add	r27, r0
    1086:	a1 1d       	adc	r26, r1
    1088:	62 1f       	adc	r22, r18
    108a:	73 9f       	mul	r23, r19
    108c:	b0 0d       	add	r27, r0
    108e:	a1 1d       	adc	r26, r1
    1090:	62 1f       	adc	r22, r18
    1092:	83 9f       	mul	r24, r19
    1094:	a0 0d       	add	r26, r0
    1096:	61 1d       	adc	r22, r1
    1098:	22 1f       	adc	r18, r18
    109a:	74 9f       	mul	r23, r20
    109c:	33 27       	eor	r19, r19
    109e:	a0 0d       	add	r26, r0
    10a0:	61 1d       	adc	r22, r1
    10a2:	23 1f       	adc	r18, r19
    10a4:	84 9f       	mul	r24, r20
    10a6:	60 0d       	add	r22, r0
    10a8:	21 1d       	adc	r18, r1
    10aa:	82 2f       	mov	r24, r18
    10ac:	76 2f       	mov	r23, r22
    10ae:	6a 2f       	mov	r22, r26
    10b0:	11 24       	eor	r1, r1
    10b2:	9f 57       	subi	r25, 0x7F	; 127
    10b4:	50 40       	sbci	r21, 0x00	; 0
    10b6:	8a f0       	brmi	.+34     	; 0x10da <__mulsf3_pse+0x84>
    10b8:	e1 f0       	breq	.+56     	; 0x10f2 <__mulsf3_pse+0x9c>
    10ba:	88 23       	and	r24, r24
    10bc:	4a f0       	brmi	.+18     	; 0x10d0 <__mulsf3_pse+0x7a>
    10be:	ee 0f       	add	r30, r30
    10c0:	ff 1f       	adc	r31, r31
    10c2:	bb 1f       	adc	r27, r27
    10c4:	66 1f       	adc	r22, r22
    10c6:	77 1f       	adc	r23, r23
    10c8:	88 1f       	adc	r24, r24
    10ca:	91 50       	subi	r25, 0x01	; 1
    10cc:	50 40       	sbci	r21, 0x00	; 0
    10ce:	a9 f7       	brne	.-22     	; 0x10ba <__mulsf3_pse+0x64>
    10d0:	9e 3f       	cpi	r25, 0xFE	; 254
    10d2:	51 05       	cpc	r21, r1
    10d4:	70 f0       	brcs	.+28     	; 0x10f2 <__mulsf3_pse+0x9c>
    10d6:	5c cf       	rjmp	.-328    	; 0xf90 <__fp_inf>
    10d8:	a6 cf       	rjmp	.-180    	; 0x1026 <__fp_szero>
    10da:	5f 3f       	cpi	r21, 0xFF	; 255
    10dc:	ec f3       	brlt	.-6      	; 0x10d8 <__mulsf3_pse+0x82>
    10de:	98 3e       	cpi	r25, 0xE8	; 232
    10e0:	dc f3       	brlt	.-10     	; 0x10d8 <__mulsf3_pse+0x82>
    10e2:	86 95       	lsr	r24
    10e4:	77 95       	ror	r23
    10e6:	67 95       	ror	r22
    10e8:	b7 95       	ror	r27
    10ea:	f7 95       	ror	r31
    10ec:	e7 95       	ror	r30
    10ee:	9f 5f       	subi	r25, 0xFF	; 255
    10f0:	c1 f7       	brne	.-16     	; 0x10e2 <__mulsf3_pse+0x8c>
    10f2:	fe 2b       	or	r31, r30
    10f4:	88 0f       	add	r24, r24
    10f6:	91 1d       	adc	r25, r1
    10f8:	96 95       	lsr	r25
    10fa:	87 95       	ror	r24
    10fc:	97 f9       	bld	r25, 7
    10fe:	08 95       	ret

00001100 <__divmodhi4>:
    1100:	97 fb       	bst	r25, 7
    1102:	07 2e       	mov	r0, r23
    1104:	16 f4       	brtc	.+4      	; 0x110a <__divmodhi4+0xa>
    1106:	00 94       	com	r0
    1108:	06 d0       	rcall	.+12     	; 0x1116 <__divmodhi4_neg1>
    110a:	77 fd       	sbrc	r23, 7
    110c:	08 d0       	rcall	.+16     	; 0x111e <__divmodhi4_neg2>
    110e:	0b d0       	rcall	.+22     	; 0x1126 <__udivmodhi4>
    1110:	07 fc       	sbrc	r0, 7
    1112:	05 d0       	rcall	.+10     	; 0x111e <__divmodhi4_neg2>
    1114:	3e f4       	brtc	.+14     	; 0x1124 <__divmodhi4_exit>

00001116 <__divmodhi4_neg1>:
    1116:	90 95       	com	r25
    1118:	81 95       	neg	r24
    111a:	9f 4f       	sbci	r25, 0xFF	; 255
    111c:	08 95       	ret

0000111e <__divmodhi4_neg2>:
    111e:	70 95       	com	r23
    1120:	61 95       	neg	r22
    1122:	7f 4f       	sbci	r23, 0xFF	; 255

00001124 <__divmodhi4_exit>:
    1124:	08 95       	ret

00001126 <__udivmodhi4>:
    1126:	aa 1b       	sub	r26, r26
    1128:	bb 1b       	sub	r27, r27
    112a:	51 e1       	ldi	r21, 0x11	; 17
    112c:	07 c0       	rjmp	.+14     	; 0x113c <__udivmodhi4_ep>

0000112e <__udivmodhi4_loop>:
    112e:	aa 1f       	adc	r26, r26
    1130:	bb 1f       	adc	r27, r27
    1132:	a6 17       	cp	r26, r22
    1134:	b7 07       	cpc	r27, r23
    1136:	10 f0       	brcs	.+4      	; 0x113c <__udivmodhi4_ep>
    1138:	a6 1b       	sub	r26, r22
    113a:	b7 0b       	sbc	r27, r23

0000113c <__udivmodhi4_ep>:
    113c:	88 1f       	adc	r24, r24
    113e:	99 1f       	adc	r25, r25
    1140:	5a 95       	dec	r21
    1142:	a9 f7       	brne	.-22     	; 0x112e <__udivmodhi4_loop>
    1144:	80 95       	com	r24
    1146:	90 95       	com	r25
    1148:	bc 01       	movw	r22, r24
    114a:	cd 01       	movw	r24, r26
    114c:	08 95       	ret

0000114e <_exit>:
    114e:	f8 94       	cli

00001150 <__stop_program>:
    1150:	ff cf       	rjmp	.-2      	; 0x1150 <__stop_program>
